//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this sample source code is subject to the terms of the Microsoft
// license agreement under which you licensed this sample source code. If
// you did not accept the terms of the license agreement, you are not
// authorized to use this sample source code. For the terms of the license,
// please see the license agreement between you and Microsoft or, if applicable,
// see the LICENSE.RTF on your install media or the root of your tools installation.
// THE SAMPLE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES OR INDEMNITIES.
//

/*
================================================================================
*             Texas Instruments OMAP(TM) Platform Software
* (c) Copyright Texas Instruments, Incorporated. All Rights Reserved.
*
* Use of this software is controlled by the terms and conditions found
* in the license agreement under which this software has been supplied.
*
================================================================================
*/

//------------------------------------------------------------------------------
//
//  File:  am387x_prcm.h
//
//  This header file is comprised of PRCM module register details defined as 
//  structures and macros for configuring and controlling PRCM module.

#ifndef __AM387X_PRCM_H
#define __AM387X_PRCM_H

#include "omap_types.h"

#define PRCM_OFS(field)  ((LONG)&(((AM387X_PRCM_REGS*)0)->field)) 
#define PLLSS_OFS(field) ((LONG)&(((AM387X_PLLSS_REGS*)0)->field)) 

//------------------------------------------------------------------------------
// On AM387 the CM module has 0x48180000 base address
typedef struct {
// RPM_DEVICE
	UINT32	res_0000_00BC[40];
#define PRM_RSTCTRL PRM_DEVICE 
	REG32	PRM_DEVICE;			// 0x00A0
	REG32	PRM_RSTTIME;		// 0x00A4
	REG32	PRM_RSTST;			// 0x00A8
	UINT32	res_00AC_00FC[21];
// CM DEVICE
	REG32	CM_CLKOUT_CTRL;		// 0x100
	UINT32	res_0104_01FC[63];
// OCP_SOCKET_PRM	 
	REG32	REVISION_PRM;		// 0x0200
	UINT32	res_0204_02FC[63];
// CM_DPLL
	UINT32	res_0300_0304[2];
	REG32	CM_SYSCLK3_CLKSEL;		// 0x0308
	UINT32	res_030C_0310[2];
	REG32	CM_SYSCLK6_CLKSEL;		// 0x0314
	UINT32	res_0318_0320[3];
	REG32	CM_SYSCLK10_CLKSEL;		// 0x0324
	UINT32	res_0328_033C[6];
	REG32	CM_PV2B3_CLKSEL;		// 0x0340
	REG32	CM_PV1C1_CLKSEL;		// 0x0344
	REG32	CM_PV0D1_CLKSEL;		// 0x0348
	REG32	CM_SYSCLK19_CLKSEL;		// 0x034C
	REG32	CM_SYSCLK20_CLKSEL;		// 0x0350
	REG32	CM_SYSCLK21_CLKSEL;		// 0x0354
	UINT32	res_0358;
	REG32	CM_RTCDIVA_CLKSEL;		// 0x035C
	UINT32	res_0360_036C[4];
	REG32	CM_SYSCLK14_CLKSEL;		// 0x0370
	REG32	CM_SYSCLK16_CLKSEL;		// 0x0374
	REG32	CM_SYSCLK18_CLKSEL;		// 0x0378
	REG32	CM_AUDIOCLK_MCASP0_CLKSEL; // 0x037C
	REG32	CM_AUDIOCLK_MCASP1_CLKSEL; // 0x0380
	REG32	CM_AUDIOCLK_MCASP2_CLKSEL; // 0x0384
	REG32	CM_AUDIOCLK_MCBSP_CLKSEL;  // 0x0388
	UINT32	res_038C_03A8[8];
	REG32	CM_HDMI_CLKSEL;			// 0x03AC
	REG32	CM_SYSCLK23_CLKSEL;		// 0x03B0
	UINT32	res_03B4_03FC[19];
// CM_DSP
	REG32	CM_DSP_CLKSTCTRL;			// 0x0400
	UINT32	res_0404_041C[7];
	REG32	CM_DSP_CLKCTRL;		        // 0x0420
	UINT32	res_042C_04FC[55];
// CM_ALWON2
	UINT32	res_0500;
	REG32	CM_ALWON2_L3_MED_CLKSTCTRL; // 0x0504
	REG32	CM_ALWON2_L3_FAST_CLKSTCTRL;// 0x0508
	REG32	CM_ALWON2_TPPSS_CLKSTCTRL;	// 0x050C
	REG32	CM_ALWON2_PCI_CLKSTCTRL;	// 0x0510
	REG32	CM_ALWON2_L3_SLOW_CLKSTCTRL;// 0x0514
	REG32	CM_ALWON2_MC_CLKSTCTRL;		// 0x0518
	UINT32	res_051C;
    REG32   CM_ALWON2_EMIF_0_CLKCTRL;    // 0x0520
    REG32   CM_ALWON2_EMIF_1_CLKCTRL;    // 0x0524
	REG32	CM_ALWON2_DMM_CLKCTRL;		// 0x0528
	REG32	CM_ALWON2_FW_CLKCTRL;		// 0x052C
	UINT32	res_0530_0550[9];
	REG32	CM_ALWON2_TPPSS_CLKCTRL;	// 0x0554
	REG32	CM_ALWON2_USB_CLKCTRL;		// 0x0558
	UINT32	res_055C;
	REG32	CM_ALWON2_SATA_CLKCTRL;		// 0x0560
	UINT32	res_0564_0570[4];
	REG32	CM_ALWON2_MC_CLKCTRL;		// 0x0574
	REG32	CM_ALWON2_PCI_CLKCTRL;		// 0x0578
	UINT32	res_057C_05FC[33];
// CM_HDVICP
	REG32	CM_HDVICP_CLKSTCTRL;			// 0x0600
	UINT32	res_0604_061C[7];
	REG32	CM_HDVICP_CLKCTRL;				// 0x0620
	REG32	CM_HDVICP_SL2_CLKCTRL;			// 0x0624
	UINT32	res_0628_06FC[54];
// CM_ISP
	REG32	CM_ISP_CLKSTCTRL;				// 0x0700
	UINT32	res_0704_071C[7];
	REG32	CM_ISP_ISP_CLKCTRL;				// 0x0720
	REG32	CM_ISP_FDIF_CLKCTRL;			// 0x0724
	UINT32	res_0728_07FC[54];
// CM_HDVPSS
	REG32	CM_HDVPSS_CLKSTCTRL;			// 0x0800
	UINT32	res_0804_081C[7];
	REG32	CM_HDVPSS_HDVPSS_CLKCTRL;		// 0x0820
	REG32	CM_HDVPSS_HDMI_CLKCTRL;			// 0x0824
	UINT32	res_0828_08FC[54];
// CM_GFX
	REG32	CM_GFX_CLKSTCTRL;				// 0x0900
	UINT32	res_0904_091C[7];
	REG32	CM_GFX_GFX_CLKCTRL;				// 0x0920
	UINT32	res_0924_09FC[55];
// PRM_DSP
	REG32	PM_DSP_PWRSTCTRL;				// 0x0A00
	REG32	PM_DSP_PWRSTST;					// 0x0A04
	UINT32	res_0A08_0A0C[2];
	REG32	RM_DSP_RSTCTRL;					// 0x0A10
	REG32	RM_DSP_RSTST;					// 0x0A14
	UINT32	res_0A18_0AFC[58];
// RPM_ALWON2
	UINT32	res_0B00_0B0C[4];
	REG32	RM_ALWON2_RSTCTRL;				// 0x0B10
	REG32	RM_ALWON2_RSTST;				// 0x0B14
	UINT32	res_0B18_0BFC[58];
// PRM_HDVICP
	REG32	PM_HDVICP_PWRSTCTRL;			// 0x0C00
	REG32	PM_HDVICP_PWRSTST;				// 0x0C04
	UINT32	res_0C08_0C0C[2];
	REG32	RM_HDVICP_RSTCTRL;				// 0x0C10
	REG32	RM_HDVICP_RSTST;				// 0x0C14
	UINT32	res_0C18_0CFC[58];
// PRM_ISP
	REG32	PM_ISP_PWRSTCTRL;				// 0x0D00
	REG32	PM_ISP_PWRSTST;					// 0x0D04
	UINT32	res_0D08_0D0C[2];
	REG32	RM_ISP_RSTCTRL;					// 0x0D10
	REG32	RM_ISP_RSTST;					// 0x0D14
	UINT32	res_0D18_0DFC[58];
// PRM_HDVPSS
	REG32	PM_HDVPSS_PWRSTCTRL;			// 0x0E00
	REG32	PM_HDVPSS_PWRSTST;				// 0x0E04
	UINT32	res_0E08_0E0C[2];
	REG32	RM_HDVPSS_RSTCTRL;				// 0x0E10
	REG32	RM_HDVPSS_RSTST;				// 0x0E14
	UINT32	res_0E18_0EFC[58];
// RPM_GFX
	REG32	PM_GFX_PWRSTCTRL;				// 0x0F00
	REG32	RM_GFX_RSTCTRL;					// 0x0F04
	UINT32	res_0F08_0F1C[2];
	REG32	PM_GFX_PWRSTST;					// 0x0F10
	REG32	RM_GFX_RSTST;					// 0x0F14
	UINT32	res_0F18_0FFC[58];
//
	UINT32	res_1000_13FC[64*4];
// CM_ALWON
	REG32	CM_ALWON_L3_SLOW_CLKSTCTRL;		// 0x1400
	REG32	CM_ETHERNET_CLKSTCTRL;			// 0x1404
	REG32	CM_ALWON_L3_MED_CLKSTCTRL;		// 0x1408
	REG32	CM_MMU_CLKSTCTRL;				// 0x140C
	REG32	CM_MMUCFG_CLKSTCTRL;			// 0x1410
	REG32	CM_ALWON_OCMC_0_CLKSTCTRL;		// 0x1414
	REG32	CM_ALWON_VCP_CLKSTCTRL;			// 0x1418
	REG32	CM_ALWON_MPU_CLKSTCTRL;			// 0x141C
	REG32	CM_ALWON_SYSCLK4_CLKSTCTRL;		// 0x1420
	UINT32	res_1424;
	REG32	CM_ALWON_SYSCLK6_CLKSTCTRL;		// 0x1428
	REG32	CM_ALWON_RTC_CLKSTCTRL;			// 0x142C
	REG32	CM_ALWON_L3_FAST_CLKSTCTRL;		// 0x1430
	UINT32	res_1434_153C[67];
	REG32	CM_ALWON_MCASP0_CLKCTRL;		// 0x1540
	REG32	CM_ALWON_MCASP1_CLKCTRL;		// 0x1544
	REG32	CM_ALWON_MCASP2_CLKCTRL;		// 0x1548
	REG32	CM_ALWON_MCBSP_CLKCTRL;			// 0x154C
	REG32	CM_ALWON_UART_0_CLKCTRL;		// 0x1550
	REG32	CM_ALWON_UART_1_CLKCTRL;		// 0x1554
	REG32	CM_ALWON_UART_2_CLKCTRL;		// 0x1558
	REG32	CM_ALWON_GPIO_0_CLKCTRL;		// 0x155C
	REG32	CM_ALWON_GPIO_1_CLKCTRL;		// 0x1560
	REG32	CM_ALWON_I2C_02_CLKCTRL;		// 0x1564
	REG32	CM_ALWON_I2C_13_CLKCTRL;		// 0x1568
	REG32	CM_ALWON_MCASP_3_4_5_CLKCTRL;	// 0x156C
	REG32	CM_ALWON_ATL_CLKCTRL;			// 0x1570
	REG32	CM_ALWON_MLB_CLKCTRL;			// 0x1574
	REG32	CM_ALWON_PATA_CLKCTRL;			// 0x1578
	UINT32	res_157C;
	REG32	CM_ALWON_UART_3_CLKCTRL;		// 0x1580
	REG32	CM_ALWON_UART_4_CLKCTRL;		// 0x1584
	REG32	CM_ALWON_UART_5_CLKCTRL;		// 0x1588
	REG32	CM_ALWON_WDTIMER_CLKCTRL;		// 0x158C
	REG32	CM_ALWON_SPI_CLKCTRL;			// 0x1590
	REG32	CM_ALWON_MAILBOX_CLKCTRL;		// 0x1594
	REG32	CM_ALWON_SPINBOX_CLKCTRL;		// 0x1598
	REG32	CM_ALWON_MMUDATA_CLKCTRL;		// 0x159C
	UINT32	res_15A0_15A4[2];
	REG32	CM_ALWON_MMUCFG_CLKCTRL;		// 0x15A8
	UINT32	res_15AC;
	REG32	CM_ALWON_SDIO_CLKCTRL;			// 0x15B0
	REG32	CM_ALWON_OCMC_0_CLKCTRL;		// 0x15B4
	REG32	CM_ALWON_VCP_CLKCTRL;			// 0x15B8
	REG32	CM_ALWON_SMARTCARD_0_CLKCTRL;	// 0x15BC
	REG32	CM_ALWON_SMARTCARD_1_CLKCTRL;	// 0x15C0
	REG32	CM_ALWON_CONTROL_CLKCTRL;		// 0x15C4
	REG32	CM_ALWON_SECSS_CLKCTRL;			// 0x15C8
	UINT32	res_15CC;
	REG32	CM_ALWON_GPMC_CLKCTRL;			// 0x15D0
	REG32	CM_ALWON_ETHERNET_0_CLKCTRL;	// 0x15D4
	REG32	CM_ALWON_ETHERNET_1_CLKCTRL;	// 0x15D8
	REG32	CM_ALWON_MPU_CLKCTRL;			// 0x15DC
	REG32	CM_ALWON_DEBUGSS_CLKCTRL;		// 0x15E0
	REG32	CM_ALWON_L3_CLKCTRL;			// 0x15E4
	REG32	CM_ALWON_L4HS_CLKCTRL;			// 0x15E8
	REG32	CM_ALWON_L4LS_CLKCTRL;			// 0x15EC
	REG32	CM_ALWON_RTC_CLKCTRL;			// 0x15F0
	REG32	CM_ALWON_TPCC_CLKCTRL;			// 0x15F4   // ??? from PSP
	UINT32	res_15F8_1604[4];
	REG32	CM_ALWON_SR_0_CLKCTRL;			// 0x1608
	REG32	CM_ALWON_SR_1_CLKCTRL;			// 0x160C
	REG32	CM_ALWON_SR_2_CLKCTRL;			// 0x1610
	REG32	CM_ALWON_SR_3_CLKCTRL;			// 0x1614
	REG32	CM_ALWON_DCAN_0_1_CLKCTRL;		// 0x1618
	REG32	CM_ALWON_MMCHS_0_CLKCTRL;		// 0x161C
	REG32	CM_ALWON_MMCHS_1_CLKCTRL;		// 0x1620
	REG32	CM_ALWON_MMCHS_2_CLKCTRL;		// 0x1624
	UINT32	res_162C_17FC[117];
// PRM_ALWON
	UINT32	res_1800_180C[4];
	REG32	RM_ALWON_RSTCTRL;				// 0x1810
	REG32	RM_ALWON_RSTST;					// 0x1814
	UINT32	res_1818_1BFC[250];
} AM387X_PRCM_REGS;


//
// On AM387 the PLLSS_PREGS module has 0x481C5000 base address
typedef struct {
	REG32	CONTROL_REVISION;		// 0x0000
	REG32	CONTROL_HWINFO;			// 0x0004
	UINT32	res_0008_000C[2];	
	REG32	CONTROL_SYSCONFIG;		// 0x0010
	REG32	CONTROL_SYSSTATUS;		// 0x0014
	REG32	CONTROL_IRQSTATUS;		// 0x0018
	REG32	CONTROL_IRQENABLE;		// 0x001C
	REG32	CONTROL_WAKEUPENABLE;	// 0x0020
	UINT32	res_0024_003C[7];
	REG32	PLLSS_MMR_LOCK;			// 0x0040
	UINT32	res_0044;				// 0x0044
	REG32	MODENAPLL_PWRCTRL;		// 0x0048
	REG32	MODENAPLL_CLKCTRL;		// 0x004C
	REG32	MODENAPLL_TENABLE;		// 0x0050
	REG32	MODENAPLL_TENABLEDIV;	// 0x0054
	REG32	MODENAPLL_M2NDIV;		// 0x0058
	REG32	MODENAPLL_MN2DIV;		// 0x005C
	REG32	MODENAPLL_FRACDIV;		// 0x0060
	REG32	MODENAPLL_BWCTRL;		// 0x0064
	REG32	MODENAPLL_FRACCTRL;		// 0x0068
	REG32	MODENAPLL_STATUS;		// 0x006C
	REG32	MODENA;					// 0x0070
	REG32	MODENAPLL_RAMPCTRL;		// 0x0074
	UINT32	res_0078_007[2];		// 0x0078
	REG32	DSPPLL_PWRCTRL;			// 0x0080
	REG32	DSPPLL_CLKCTRL;			// 0x0084
	REG32	DSPPLL_TENABLE;			// 0x0088
	REG32	DSPPLL_TENABLEDIV;		// 0x008C
	REG32	DSPPLL_M2NDIV;			// 0x0090
	REG32	DSPPLL_MN2DIV;			// 0x0094
	REG32	DSPPLL_FRACDIV;			// 0x0098
	REG32	DSPPLL_BWCTRL;			// 0x009C
	REG32	DSPPLL_FRACCTRL;		// 0x00A0
	REG32	DSPPLL_STATUS;			// 0x00A4
	UINT32	res_00A8_00AC[2];		// 0x00A8
	REG32	SGXPLL_PWRCTRL;			// 0x00B0
	REG32	SGXPLL_CLKCTRL;			// 0x00B4
	REG32	SGXPLL_TENABLE;			// 0x00B8
	REG32	SGXPLL_TENABLEDIV;		// 0x00BC
	REG32	SGXPLL_M2NDIV;			// 0x00C0
	REG32	SGXPLL_MN2DIV;			// 0x00C4
	REG32	SGXPLL_FRACDIV;			// 0x00C8
	REG32	SGXPLL_BWCTRL;			// 0x00CC
	REG32	SGXPLL_FRACCTRL;		// 0x00D0
	REG32	SGXPLL_STATUS;			// 0x00D4
	UINT32	res_00D8_00DC[2];		// 0x00D8
	REG32	IVAPLL_PWRCTRL;			// 0x00E0
	REG32	IVAPLL_CLKCTRL;			// 0x00E4
	REG32	IVAPLL_TENABLE;			// 0x00E8
	REG32	IVAPLL_TENABLEDIV;		// 0x00EC
	REG32	IVAPLL_M2NDIV;			// 0x00F0
	REG32	IVAPLL_MN2DIV;			// 0x00F4
	REG32	IVAPLL_FRACDIV;			// 0x00F8
	REG32	IVAPLL_BWCTRL;			// 0x00FC
	REG32	IVAPLL_FRACCTRL;		// 0x0100
	REG32	IVAPLL_STATUS;			// 0x0104
	UINT32	res_0108_010C[2];		// 0x0108
	REG32	L3PLL_PWRCTRL;			// 0x0110
	REG32	L3PLL_CLKCTRL;			// 0x0114
	REG32	L3PLL_TENABLE;			// 0x0118
	REG32	L3PLL_TENABLEDIV;		// 0x011C
	REG32	L3PLL_M2NDIV;			// 0x0120
	REG32	L3PLL_MN2DIV;			// 0x0124
	REG32	L3PLL_FRACDIV;			// 0x0128
	REG32	L3PLL_BWCTRL;			// 0x012C
	REG32	L3PLL_FRACCTRL;			// 0x0130
	REG32	L3PLL_STATUS;			// 0x0134
	UINT32	res_0138_013C[2];		// 0x0138
	REG32	ISSPLL_PWRCTRL;			// 0x0140
	REG32	ISSPLL_CLKCTRL;			// 0x0144
	REG32	ISSPLL_TENABLE;			// 0x0148
	REG32	ISSPLL_TENABLEDIV;		// 0x014C
	REG32	ISSPLL_M2NDIV;			// 0x0150
	REG32	ISSPLL_MN2DIV;			// 0x0154
	REG32	ISSPLL_FRACDIV;			// 0x0158
	REG32	ISSPLL_BWCTRL;			// 0x015C
	REG32	ISSPLL_FRACCTRL;		// 0x0160
	REG32	ISSPLL_STATUS;			// 0x0164
	UINT32	res_0168_016C[2];		// 0x0168
	REG32	DSSPLL_PWRCTRL;			// 0x0170
	REG32	DSSPLL_CLKCTRL;			// 0x0174
	REG32	DSSPLL_TENABLE;			// 0x0178
	REG32	DSSPLL_TENABLEDIV;		// 0x017C
	REG32	DSSPLL_M2NDIV;			// 0x0180
	REG32	DSSPLL_MN2DIV;			// 0x0184
	REG32	DSSPLL_FRACDIV;			// 0x0188
	REG32	DSSPLL_BWCTRL;			// 0x018C
	REG32	DSSPLL_FRACCTRL;		// 0x0190
	REG32	DSSPLL_STATUS;			// 0x0194
	UINT32	res_0198_019C[2];		// 0x0198
	REG32	VIDEO0PLL_PWRCTRL;		// 0x01A0
	REG32	VIDEO0PLL_CLKCTRL;		// 0x01A4
	REG32	VIDEO0PLL_TENABLE;		// 0x01A8
	REG32	VIDEO0PLL_TENABLEDIV;	// 0x01AC
	REG32	VIDEO0PLL_M2NDIV;		// 0x01B0
	REG32	VIDEO0PLL_MN2DIV;		// 0x01B4
	REG32	VIDEO0PLL_FRACDIV;		// 0x01B8
	REG32	VIDEO0PLL_BWCTRL;		// 0x01BC
	REG32	VIDEO0PLL_FRACCTRL;		// 0x01C0
	REG32	VIDEO0PLL_STATUS;		// 0x01C4
	UINT32	res_01C8_01CC[2];		// 0x01C8
	REG32	VIDEO1PLL_PWRCTRL;		// 0x01D0
	REG32	VIDEO1PLL_CLKCTRL;		// 0x01D4
	REG32	VIDEO1PLL_TENABLE;		// 0x01D8
	REG32	VIDEO1PLL_TENABLEDIV;	// 0x01DC
	REG32	VIDEO1PLL_M2NDIV;		// 0x01E0
	REG32	VIDEO1PLL_MN2DIV;		// 0x01E4
	REG32	VIDEO1PLL_FRACDIV;		// 0x01E8
	REG32	VIDEO1PLL_BWCTRL;		// 0x01EC
	REG32	VIDEO1PLL_FRACCTRL;		// 0x01F0
	REG32	VIDEO1PLL_STATUS;		// 0x01F4
	UINT32	res_01F8_01FC[2] ;		// 0x01F8
	REG32	HDMIPLL_PWRCTRL;		// 0x0200
	REG32	HDMIPLL_CLKCTRL;		// 0x0204
	REG32	HDMIPLL_TENABLE;		// 0x0208
	REG32	HDMIPLL_TENABLEDIV;		// 0x020C
	REG32	HDMIPLL_M2NDIV;			// 0x0210
	REG32	HDMIPLL_MN2DIV;			// 0x0214
	REG32	HDMIPLL_FRACDIV;		// 0x0218
	REG32	HDMIPLL_BWCTRL;			// 0x021C
	REG32	HDMIPLL_FRACCTRL;		// 0x0220
	REG32	HDMIPLL_STATUS;			// 0x0224
	UINT32	res_0288_022C[2];		// 0x0228
	REG32	AUDIOPLL_PWRCTRL;		// 0x0230
	REG32	AUDIOPLL_CLKCTRL;		// 0x0234
	REG32	AUDIOPLL_TENABLE;		// 0x0238
	REG32	AUDIOPLL_TENABLEDIV;	// 0x023C
	REG32	AUDIOPLL_M2NDIV;		// 0x0240
	REG32	AUDIOPLL_MN2DIV;		// 0x0244
	REG32	AUDIOPLL_FRACDIV;		// 0x0248
	REG32	AUDIOPLL_BWCTRL;		// 0x024C
	REG32	AUDIOPLL_FRACCTRL;		// 0x0250
	REG32	AUDIOPLL_STATUS;		// 0x0254
	UINT32	res_0258_025C[2];		// 0x0258
	REG32	USBPLL_PWRCTRL;			// 0x0260
	REG32	USBPLL_CLKCTRL;			// 0x0264
	REG32	USBPLL_TENABLE;			// 0x0268
	REG32	USBPLL_TENABLEDIV;		// 0x026C
	REG32	USBPLL_M2NDIV;			// 0x0270
	REG32	USBPLL_MN2DIV;			// 0x0274
	REG32	USBPLL_FRACDIV;			// 0x0278
	REG32	USBPLL_BWCTRL;			// 0x027C
	REG32	USBPLL_FRACCTRL;		// 0x0280
	REG32	USBPLL_STATUS;			// 0x0284
	UINT32	res_0288_028C[2];		// 0x0288
	REG32	DDRPLL_PWRCTRL;			// 0x0290
	REG32	DDRPLL_CLKCTRL;			// 0x0294
	REG32	DDRPLL_TENABLE;			// 0x0298
	REG32	DDRPLL_TENABLEDIV;		// 0x029C
	REG32	DDRPLL_M2NDIV;			// 0x02A0
	REG32	DDRPLL_MN2DIV;			// 0x02A4
	REG32	DDRPLL_FRACDIV;			// 0x02A8
	REG32	DDRPLL_BWCTRL;			// 0x02AC
	REG32	DDRPLL_FRACCTRL;		// 0x02B0
	REG32	DDRPLL_STATUS;			// 0x02B4
	UINT32	res_02B8_02BC[2];		// 0x02B8
	REG32	OSC_SRC;				// 0x02C0
	REG32	ARM_CLKSRC;				// 0x02C4
	REG32	VIDEO_PLL_CLKSRC;		// 0x02C8
	REG32	MLB_ATL_CLKSRC;			// 0x02CC
	REG32	McASP345_AUX_CLKSRC;	// 0x02D0
	REG32	McASP_AHCLK_CLKSRC;		// 0x02D4
	REG32	McBSP_UART_CLKSRC;		// 0x02D8
	REG32	HDMI_I2S_CLKSRC;		// 0x02DC
	REG32	DMTIMER_CLKSRC;			// 0x02E0
	REG32	CLKOUT_MUX;				// 0x02E4
	REG32	RMII_REFCLK_SRC;		// 0x02E8
	REG32	SECSS_CLK_SRC;			// 0x02EC
	REG32	SYSCLK_18_SRC;			// 0x02F0
	REG32	WDT0_SRC;				// 0x02F4
	UINT32	res_02F8_0308[5];		// 0x02F8
	REG32	EMIF_CLK_GATE;			// 0x030C
	UINT32	res_0310_031C[4];		// 0x02F8
	REG32	TIMER_CLK_CHANGE;		// 0x0320
	REG32	DEEPSLEEP_CTRL;			// 0x0324
	REG32	DEEPSLEEP_STATUS;		// 0x0328
} AM387X_PLLSS_REGS;

//-----------------------------------------------------------------------------
// sysconfig flags
//
#define SYSCONFIG_AUTOIDLE                  (1 << 0)
#define SYSCONFIG_SOFTRESET                 (1 << 1)

#define SYSSTATUS_RESETDONE                 (1 << 0)

#define SYSCONFIG_ENAWAKEUP                 (1 << 2)

#define SYSCONFIG_FORCEIDLE                 (0 << 3)
#define SYSCONFIG_NOIDLE                    (1 << 3)
#define SYSCONFIG_SMARTIDLE                 (2 << 3)
#define SYSCONFIG_IDLE_MASK                 (3 << 3)

#define CLKREQ_POL_ACTIVELOW                (0 << 1)
#define CLKREQ_POL                          (1 << 1)

// defines sys_vmode signal
#define EXTVOL_POL_ACTIVEHIGH               (1 << 0)
#define EXTVOL_POL_ACTIVELOW                (0 << 0)
#define EXTVOL_POL                          (1 << 0)


// PRM_DEVICE
#define MPU_SECURITY_VIOL_RST				(1 << 2)
#define MPU_WDT_RST							(1 << 3)
#define SECURE_WDT_RST						(1 << 4)
#define EXTERNALWARM_RST                    (1 << 5)
#define GLOBALWARM_RST                      (1 << 1)
#define GLOBALCOLD_RST                      (1 << 0)

// DSP_RST
#define GEM_GRST							(1 << 1)
#define GEM_LRST                            (1 << 0)

// alwon2 domain
#define PCI_LRST                            (1 << 7)
#define USB2_LRST                           (1 << 6)
#define USB1_LRST                           (1 << 5)
#define MC_RST3		                        (1 << 4)
#define MC_M3_RST2		                    (1 << 3)
#define MC_M3_RST1			                (1 << 2)
#define TPPSS_RST							(1 << 1)
#define TPPSS_LRST							(1 << 0)

//HDVICP domain
//#define ICECRUSHER_SEQ2_RST2                (1 << 6)
//#define ICECRUSHER_SEQ1_RST1                (1 << 5)
//#define EMULATION_SEQ2_RST2                 (1 << 4)
//#define EMULATION_SEQ1_RST1		          (1 << 3)
#define HDVICP_RST3                         (1 << 2)
#define HDVICP_RST2                         (1 << 1)
#define HDVICP_RST1                         (1 << 0)

//ISP domain
#define ISP_RST                             (1 << 2)

//HDVPSS domain
#define HDVPSS_RST                          (1 << 2)

//GFX domain
#define GFX_RST                             (1 << 0)

//ALWON domain
#define SEC_M3_RST                          (1 << 1)
#define SEC_M3_LRST                         (1 << 0)


#endif
