// All rights reserved ADENEO EMBEDDED 2010
// Copyright (c) 2007, 2008 BSQUARE Corporation. All rights reserved.

/*
================================================================================
*             Texas Instruments OMAP(TM) Platform Software
* (c) Copyright Texas Instruments, Incorporated. All Rights Reserved.
*
* Use of this software is controlled by the terms and conditions found
* in the license agreement under which this software has been supplied.
*
================================================================================
*/

//------------------------------------------------------------------------------
//
//  File:  am389x_config.h
//
//  This header file is comprised of control pad configuration module register
//  details defined as structures and macros for configuring the pads.
//

#ifndef __AM389X_CONFIG_H
#define __AM389X_CONFIG_H

//------------------------------------------------------------------------------
// System PAD Configuration Registers
#include <omap_types.h>

// OMAP_SYSC_INTERFACE_REGS
//
typedef volatile struct {
    REG32	CONTROL_REVISION;		// offset 0x0000 
    REG32	CONTROL_HWINFO;			// offset 0x0000 
    UINT32	zzzReserved01[2];
    REG32	CONTROL_SYSCONFIG;		// offset 0x0010
    UINT32	zzzReserved02[11];		// 0x0014-0x003C
} AM389X_OCP_CONF_REGS;

typedef volatile struct {
	REG32	CONTROL_STATUS;			// 0x0040
	REG32	BOOTSTAS;				// 0x0044
	REG32	DSPBOOTADDR;			// 0x0048
	UINT32  res[45];				// 0x004c-0x00fc
} AM389X_DEVICE_BOOT_REGS;

typedef volatile struct {			// 0x100-0x2fc
	UINT32	placeholder[128];		// TODO: make structure
} AM389X_SECnFUSE_KEY_REGS;

typedef volatile struct {			// 0x300-0x3fc
	UINT32	placeholder[64];		// TODO: make structure
} AM389X_SECURE_SM_REGS;

typedef volatile struct {
	REG32	MAINPLL_CTRL;			// 0x0400
	REG32	MAINPLL_PWD;			// 0x0404
	REG32	MAINPLL_FREQ1;			// 0x0408
	REG32	MAINPLL_DIV1;			// 0x040C
	REG32	MAINPLL_FREQ2;			// 0x0410
	REG32	MAINPLL_DIV2;			// 0x0414
	REG32	MAINPLL_FREQ3;			// 0x0418
	REG32	MAINPLL_DIV3;			// 0x041C
	REG32	MAINPLL_FREQ4;			// 0x0420
	REG32	MAINPLL_DIV4;			// 0x0424
	REG32	MAINPLL_FREQ5;			// 0x0428
	REG32	MAINPLL_DIV5;			// 0x042C
	REG32	MAINPLL_FREQ6;			// 0x0430
	REG32	MAINPLL_DIV6;			// 0x0434
	REG32	MAINPLL_FREQ7;			// 0x0438
	REG32	MAINPLL_DIV7;			// 0x043C
	REG32	DDRPLL_CTRL;			// 0x0440
	REG32	DDRPLL_PWD;				// 0x0444
	UINT32	RES_0448;				//
	REG32	DDRPLL_DIV1;			// 0x044C
	REG32	DDRPLL_FREQ2;			// 0x0450
	REG32	DDRPLL_DIV2;			// 0x0454
	REG32	DDRPLL_FREQ3;			// 0x0458
	REG32	DDRPLL_DIV3;			// 0x045C
	REG32	DDRPLL_FREQ4;			// 0x0460
	REG32	DDRPLL_DIV4;			// 0x0464
	REG32	DDRPLL_FREQ5;			// 0x0468
	REG32	DDRPLL_DIV5;			// 0x046C
	REG32	VIDEOPLL_CRTL;			// 0x0470
	REG32	VIDEOPLL_PWD;			// 0x0474
	REG32	VIDEOPLL_FREQ1;			// 0x0478
	REG32	VIDEOPLL_DIV1;			// 0x047C
	REG32	VIDEOPLL_FREQ2;			// 0x0480
	REG32	VIDEOPLL_DIV2;			// 0x0484
	REG32	VIDEOPLL_FREQ3;			// 0x0488
	REG32	VIDEOPLL_DIV3;			// 0x048C
	UINT32	RES_0490_049C[4];		//
	REG32	AUDIOPLL_CRTL;			// 0x04A0
	REG32	AUDIOPLL_PWD;			// 0x04A4
	UINT32	RES_04A8_04AC[2];		//
	REG32	AUDIOPLL_FREQ2;			// 0x04B0
	REG32	AUDIOPLL_DIV2;			// 0x04B4
	REG32	AUDIOPLL_FREQ3;			// 0x04B8
	REG32	AUDIOPLL_DIV3;			// 0x04BC
	REG32	AUDIOPLL_FREQ4;			// 0x04C0
	REG32	AUDIOPLL_DIV4;			// 0x04C4
	REG32	AUDIOPLL_FREQ5;			// 0x04C8
	REG32	AUDIOPLL_DIV5;			// 0x04CC
	UINT32	RES_04D0_05FF[76];		//
} AM389X_PLL_CONTROL_REGS;


typedef volatile struct {
    REG32	DEVICE_ID;				// 0x0600 
    REG32	DEVI_FATURE;			// 0x0604 
	REG32	INIT_PRIORITY_0;		// 0x0608
	REG32	INIT_PRIORITY_1;		// 0x060C
	REG32	MMU_CFG;				// 0x0610
	REG32	TPTC_CFG;				// 0x0614	
	REG32	DDR_CTRL;				// 0x0618	
	REG32	DSP_IDLE_CFG;			// 0x061C	
	REG32	USB_CTRL;				// 0x0620	
	REG32	USBPHY_CTRL0;			// 0x0624	
	REG32	RES_628;				// 0x0628	
	REG32	USBPHY_CTRL1;			// 0x062C	
	REG32	MAC_ID0_LO;				// 0x0630	
	REG32	MAC_ID0_HI;				// 0x0634	
	REG32	MAC_ID1_LO;				// 0x0638	
	REG32	MAC_ID1_HI;				// 0x063C	
	REG32	PCIE_CFG;				// 0x0640	
	REG32	VLYNQ_CFG;				// 0x0644	
	REG32	CLK_CTRL;				// 0x0648	
	REG32	AUDIO_CTRL;				// 0x064C	
	REG32	DSPMEM_SLEEP;			// 0x0650	
	REG32	OCMEM_SLEEP;			// 0x0654	
	UINT32	RES_658_65C[2];
	REG32	HD_DAC_CTRL;			// 0x0660	
	REG32	HD_DACA_CAL;			// 0x0664	
	REG32	HD_DACB_CAL;			// 0x0668	
	REG32	HD_DACC_CAL;			// 0x066C	
	REG32	SD_DAC_CTRL;			// 0x0670	
	REG32	SD_DACA_CAL;			// 0x0674	
	REG32	SD_DACB_CAL;			// 0x0678	
	REG32	SD_DACC_CAL;			// 0x067C	
	REG32	SD_DACD_CAL;			// 0x0680	
	REG32	RF_DAC_CTRL;			// 0x0684	
	REG32	RF_DAC_CAL;				// 0x0688	
	REG32	BANDGAP_CTRL;			// 0x068C	
	REG32	HW_EVT_SEL_GRP1;		// 0x0690	
	REG32	HW_EVT_SEL_GRP2;		// 0x0694	
	REG32	HW_EVT_SEL_GRP3;		// 0x0698	
	REG32	HW_EVT_SEL_GRP4;		// 0x069C	
	REG32	SMRT_SCALE;				// 0x06A0	
	UINT32	RES_6A4;
	REG32	SMRT_OPP_SVT;			// 0x06A8	
	REG32	SMRT_OPP_HVT;			// 0x06AC	
	UINT32	RES_6B0_6BC[4];
	REG32	MRGN_MODE0;				// 0x06C0	
	REG32	MRGN_MODE1;				// 0x06C4	
	REG32	MRGN_MODE2;				// 0x06C8	
	REG32	MRGN_MODE3;				// 0x06CC	
	REG32	MRGN_MODE4;				// 0x06D0	
	REG32	MRGN_MODE5;				// 0x06D4	
	REG32	MRGN_MODE6;				// 0x06D8	
	REG32	MRGN_MODE7;				// 0x06DC	
	REG32	VREFHSTL1_CTRL;			// 0x06E0	
	REG32	VREFHSTL2_CTRL;			// 0x06E4	
	REG32	VREFHSTL3_CTRL;			// 0x06E8	
	REG32	VREFHSTL4_CTRL;			// 0x06EC	
	REG32	VREFHSTL5_CTRL;			// 0x06F0	
	REG32	VREFHSTL6_CTRL;			// 0x06F4	
	REG32	HDMI_OBSCLK_CTRL;		// 0x06F8	
	REG32	SERDES_CTRL;			// 0x06FC	
	REG32	UCB_CLK_CTL;			// 0x0700	
	REG32	PLL_OBSCLK_CTRL;		// 0x0704	
	UINT32	RES_708;
	REG32	DDR_RCD;				// 0x070C	
	REG32	VLYNQ_IODFT;			// 0x0710	
	REG32	ERR_BP_STAT;			// 0x0714	
	REG32	PCIE_TEST_CTRL;			// 0x0718	
	REG32	SATA_TEST_CTRL;			// 0x071C	
	REG32	SPARE_CTRL0;			// 0x0720	
	REG32	SPARE_CTRL1;			// 0x0724	
	REG32	SPARE_STAT0;			// 0x0728	
	REG32	SPARE_STAT1;			// 0x072C	
	UINT32	RES_730_7FC[52];
} AM389X_DEVICE_CONF_REGS;


#define SAFE_MODE                       (7)
#define RELEASED_PAD_DEFAULT_CONFIG     (INPUT_ENABLED | PULL_RESISTOR_DISABLED | MUXMODE(SAFE_MODE))
#define UNUSED_PAD_DEFAULT_CONFIG       RELEASED_PAD_DEFAULT_CONFIG
#define PAD_ID(x) (offsetof(AM389X_SYSC_PADCONFS_REGS,CONTROL_PADCONF_##x)/sizeof(UINT32))

// AM389X_SYSC_PADCONFS_REGS
typedef volatile struct {
    REG32 CONTROL_PADCONF_TSI0_DCLK		;   // 0x0800
    REG32 CONTROL_PADCONF_TSI0_DATA		;   // 0x0804
    REG32 CONTROL_PADCONF_TSI0_BYTSTRT	;   // 0x0808
    REG32 CONTROL_PADCONF_TSI0_PACVAL	;   // 0x080C
    REG32 CONTROL_PADCONF_TSI0_PACERR	;   // 0x0810
    REG32 CONTROL_PADCONF_TSI1_DCLK		;   // 0x0814
    REG32 CONTROL_PADCONF_TSI1_DATA		;   // 0x0818
    REG32 CONTROL_PADCONF_TSI1_BYTSTRT	;   // 0x081C
    REG32 CONTROL_PADCONF_TSI1_PACVAL	;   // 0x0820
    REG32 CONTROL_PADCONF_TSI1_PACERR	;   // 0x0824
	REG32 CONTROL_PADCONF_TSI2_DCLK		;   // 0x0828
    REG32 CONTROL_PADCONF_TSI2_DATA		;   // 0x082C
    REG32 CONTROL_PADCONF_TSI2_BYTSTRT	;   // 0x0830
    REG32 CONTROL_PADCONF_TSI2_PACVAL	;   // 0x0834
    REG32 CONTROL_PADCONF_TSI2_PACERR	;   // 0x0838
	REG32 CONTROL_PADCONF_TSI3_DCLK		;   // 0x083C
    REG32 CONTROL_PADCONF_TSI3_DATA		;   // 0x0840
    REG32 CONTROL_PADCONF_TSI3_BYTSTRT	;   // 0x0844
    REG32 CONTROL_PADCONF_TSI3_PACVAL	;   // 0x0848
    REG32 CONTROL_PADCONF_TSI3_PACERR	;   // 0x084C
	REG32 CONTROL_PADCONF_TSI4_DCLK		;   // 0x0850
    REG32 CONTROL_PADCONF_TSI4_DATA		;   // 0x0854
    REG32 CONTROL_PADCONF_TSI4_BYTSTRT	;   // 0x0858
    REG32 CONTROL_PADCONF_TSI4_PACVAL	;   // 0x085C
    REG32 CONTROL_PADCONF_TSI4_PACERR	;   // 0x0860
	REG32 CONTROL_PADCONF_TSI5_DCLK		;   // 0x0864
    REG32 CONTROL_PADCONF_TSI5_DATA		;   // 0x0868
    REG32 CONTROL_PADCONF_TSI5_BYTSTRT	;   // 0x086C
    REG32 CONTROL_PADCONF_TSI5_PACVAL	;   // 0x0870
    REG32 CONTROL_PADCONF_TSI5_PACERR	;   // 0x0874
	REG32 CONTROL_PADCONF_TSI6_DCLK		;   // 0x0878
    REG32 CONTROL_PADCONF_TSI6_DATA		;   // 0x087C
    REG32 CONTROL_PADCONF_TSI6_BYTSTRT	;   // 0x0880
    REG32 CONTROL_PADCONF_TSI6_PACVAL	;   // 0x0884
    REG32 CONTROL_PADCONF_TSI6_PACERR	;   // 0x0888
	REG32 CONTROL_PADCONF_TSI7_DCLK		;   // 0x088C
    REG32 CONTROL_PADCONF_TSI7_DATA		;   // 0x0890
    REG32 CONTROL_PADCONF_TSI7_BYTSTRT	;   // 0x0894
    REG32 CONTROL_PADCONF_TSI7_PACVAL	;   // 0x0898
    REG32 CONTROL_PADCONF_TSI7_PACERR	;   // 0x089C
	REG32 CONTROL_PADCONF_TSO0_DCLK		;   // 0x08A0
    REG32 CONTROL_PADCONF_TSO0_DATA		;   // 0x08A4
    REG32 CONTROL_PADCONF_TSO0_BYTSTRT	;   // 0x08A8
    REG32 CONTROL_PADCONF_TSO0_PACVAL	;   // 0x08AC
    REG32 CONTROL_PADCONF_TSO0_PACERR	;   // 0x08B0
    REG32 CONTROL_PADCONF_TSO1_DCLK		;   // 0x08B4
    REG32 CONTROL_PADCONF_TSO1_DATA		;   // 0x08B8
    REG32 CONTROL_PADCONF_TSO1_BYTSTRT	;   // 0x08BC
    REG32 CONTROL_PADCONF_TSO1_PACVAL	;   // 0x08C0
    REG32 CONTROL_PADCONF_TSO1_PACERR	;   // 0x08C4
	REG32 CONTROL_PADCONF_MTSI_DCLK		;   // 0x08C8
	REG32 CONTROL_PADCONF_MTSI_DATA0	;   // 0x08CC
	REG32 CONTROL_PADCONF_MTSI_DATA1	;   // 0x08D0
	REG32 CONTROL_PADCONF_MTSI_DATA2	;   // 0x08D4
	REG32 CONTROL_PADCONF_MTSI_DATA3	;   // 0x08D8
	REG32 CONTROL_PADCONF_MTSI_DATA4	;   // 0x08DC
	REG32 CONTROL_PADCONF_MTSI_DATA5	;   // 0x08E0
	REG32 CONTROL_PADCONF_MTSI_DATA6	;   // 0x08E4
	REG32 CONTROL_PADCONF_MTSI_DATA7	;   // 0x08E8
	REG32 CONTROL_PADCONF_MTSI_BYTSTRT	;   // 0x08EC
	REG32 CONTROL_PADCONF_MTSO_DCLK		;   // 0x08F0
	REG32 CONTROL_PADCONF_MTSO_DATA0	;   // 0x08F4
	REG32 CONTROL_PADCONF_MTSO_DATA1	;   // 0x08F8
	REG32 CONTROL_PADCONF_MTSO_DATA2	;   // 0x08FC
	REG32 CONTROL_PADCONF_MTSO_DATA3	;   // 0x0900
	REG32 CONTROL_PADCONF_MTSO_DATA4	;   // 0x0904
	REG32 CONTROL_PADCONF_MTSO_DATA5	;   // 0x0908
	REG32 CONTROL_PADCONF_MTSO_DATA6	;   // 0x090C
	REG32 CONTROL_PADCONF_MTSO_DATA7	;   // 0x0910
	REG32 CONTROL_PADCONF_MTSO_BYTSTRT	;   // 0x0914
	REG32 CONTROL_PADCONF_MCTL_SCLK		;	// 0x0918	
	REG32 CONTROL_PADCONF_MCTL_SCTL		;	// 0x091C
	REG32 CONTROL_PADCONF_MCTL_SDI		;	// 0x0920
	REG32 CONTROL_PADCONF_MCTL_SDO		;	// 0x0924
	REG32 CONTROL_PADCONF_MCARD_MDET	;	// 0x0928
	REG32 CONTROL_PADCONF_MCARD_CD1		;	// 0x092C
	REG32 CONTROL_PADCONF_MCARD_CD2		;	// 0x0900	
	REG32 CONTROL_PADCONF_MCARD_VS1		;	// 0x0934
	REG32 CONTROL_PADCONF_MCARD_VS2		;	// 0x0938
	REG32 CONTROL_PADCONF_MCARD_VCCEN	;	// 0x093C
	REG32 CONTROL_PADCONF_MCARD_VPPEN	;	// 0x0940
	REG32 CONTROL_PADCONF_MCARD_RESET	;	// 0x0944
	REG32 CONTROL_PADCONF_VIN0_CLK0		;	// 0x0948
	REG32 CONTROL_PADCONF_VIN0_CLK1		;	// 0x094C
	REG32 CONTROL_PADCONF_VIN0_D0		;	// 0x0950
	REG32 CONTROL_PADCONF_VIN0_D1		;	// 0x0954
	REG32 CONTROL_PADCONF_VIN0_D2		;	// 0x0958
	REG32 CONTROL_PADCONF_VIN0_D3		;	// 0x095C
	REG32 CONTROL_PADCONF_VIN0_D4		;	// 0x0960
	REG32 CONTROL_PADCONF_VIN0_D5		;	// 0x0964
	REG32 CONTROL_PADCONF_VIN0_D6		;	// 0x0968
	REG32 CONTROL_PADCONF_VIN0_D7		;	// 0x096C
	REG32 CONTROL_PADCONF_VIN0_D8		;	// 0x0970
	REG32 CONTROL_PADCONF_VIN0_D9		;	// 0x0974
	REG32 CONTROL_PADCONF_VIN0_D10		;	// 0x0978
	REG32 CONTROL_PADCONF_VIN0_D11		;	// 0x097C
	REG32 CONTROL_PADCONF_VIN0_D12		;	// 0x0980
	REG32 CONTROL_PADCONF_VIN0_D13		;	// 0x0984
	REG32 CONTROL_PADCONF_VIN0_D14		;	// 0x0988
	REG32 CONTROL_PADCONF_VIN0_D15		;	// 0x098C
	REG32 CONTROL_PADCONF_VOUT0_CLK		;	// 0x0990
	REG32 CONTROL_PADCONF_VOUT0_G_Y_YC2	;	// 0x0994
	REG32 CONTROL_PADCONF_VOUT0_G_Y_YC3	;	// 0x0998
	REG32 CONTROL_PADCONF_VOUT0_G_Y_YC4	;	// 0x099C
	REG32 CONTROL_PADCONF_VOUT0_G_Y_YC5	;	// 0x09A0
	REG32 CONTROL_PADCONF_VOUT0_G_Y_YC6	;	// 0x09A4
	REG32 CONTROL_PADCONF_VOUT0_G_Y_YC7	;	// 0x09A8
	REG32 CONTROL_PADCONF_VOUT0_G_Y_YC8	;	// 0x09AC
	REG32 CONTROL_PADCONF_VOUT0_G_Y_YC9	;	// 0x09B0
	REG32 CONTROL_PADCONF_VOUT0_B_CB_C2	;	// 0x09B4
	REG32 CONTROL_PADCONF_VOUT0_B_CB_C3	;	// 0x09B8
	REG32 CONTROL_PADCONF_VOUT0_B_CB_C4	;	// 0x09BC
	REG32 CONTROL_PADCONF_VOUT0_B_CB_C5	;	// 0x09C0
	REG32 CONTROL_PADCONF_VOUT0_B_CB_C6	;	// 0x09C4
	REG32 CONTROL_PADCONF_VOUT0_B_CB_C7	;	// 0x09C8
	REG32 CONTROL_PADCONF_VOUT0_B_CB_C8	;	// 0x09CC
	REG32 CONTROL_PADCONF_VOUT0_B_CB_C9	;	// 0x09D0
	REG32 CONTROL_PADCONF_VOUT0_R_CR2	;	// 0x09D4
	REG32 CONTROL_PADCONF_VOUT0_R_CR3	;	// 0x09D8
	REG32 CONTROL_PADCONF_VOUT0_R_CR4	;	// 0x09DC
	REG32 CONTROL_PADCONF_VOUT0_R_CR5	;	// 0x09E0
	REG32 CONTROL_PADCONF_VOUT0_R_CR6	;	// 0x09E4
	REG32 CONTROL_PADCONF_VOUT0_R_CR7	;	// 0x09E8
	REG32 CONTROL_PADCONF_VOUT0_R_CR8	;	// 0x09EC
	REG32 CONTROL_PADCONF_VOUT0_R_CR9	;	// 0x09F0
	REG32 CONTROL_PADCONF_MCA0_ACLKR	;	// 0x09F4
	REG32 CONTROL_PADCONF_MCA0_AHCLKR	;	// 0x09F8
	REG32 CONTROL_PADCONF_MCA0_AFSR		;	// 0x0A0C
	REG32 CONTROL_PADCONF_MCA0_ACLKX	;	// 0x0A00
	REG32 CONTROL_PADCONF_MCA0_ACLKHX	;	// 0x0A04
	REG32 CONTROL_PADCONF_MCA0_AFSX		;	// 0x0A08
	REG32 CONTROL_PADCONF_MCA0_AMUTE	;	// 0x0A0C
	REG32 CONTROL_PADCONF_MCA0_AXR0		;	// 0x0A10
	REG32 CONTROL_PADCONF_MCA0_AXR1		;	// 0x0A14
	REG32 CONTROL_PADCONF_MCA0_AXR2		;	// 0x0A18
	REG32 CONTROL_PADCONF_MCA0_AXR3		;	// 0x0A1C
	REG32 CONTROL_PADCONF_MCA0_AXR4		;	// 0x0A20
	REG32 CONTROL_PADCONF_MCA0_AXR5		;	// 0x0A24
	REG32 CONTROL_PADCONF_MCA1_ACLKR	;	// 0x0A28
	REG32 CONTROL_PADCONF_MCA1_AHCLKR	;	// 0x0A2C
	REG32 CONTROL_PADCONF_MCA1_AFSR		;	// 0x0A30
	REG32 CONTROL_PADCONF_MCA1_ACLKX	;	// 0x0A34
	REG32 CONTROL_PADCONF_MCA1_ACLKHX	;	// 0x0A38
	REG32 CONTROL_PADCONF_MCA1_AFSX		;	// 0x0A3C
	REG32 CONTROL_PADCONF_MCA1_AMUTE	;	// 0x0A40
	REG32 CONTROL_PADCONF_MCA1_AXR0		;	// 0x0A44
	REG32 CONTROL_PADCONF_MCA1_AXR1		;	// 0x0A48
	REG32 CONTROL_PADCONF_MCA2_ACLKR	;	// 0x0A4C
	REG32 CONTROL_PADCONF_MCA2_AHCLKR	;	// 0x0A50
	REG32 CONTROL_PADCONF_MCA2_AFSR		;	// 0x0A54
	REG32 CONTROL_PADCONF_MCA2_ACLKX	;	// 0x0A58
	REG32 CONTROL_PADCONF_MCA2_ACLKHX	;	// 0x0A5C
	REG32 CONTROL_PADCONF_MCA2_AFSX		;	// 0x0A60
	REG32 CONTROL_PADCONF_MCA2_AMUTE	;	// 0x0A64
	REG32 CONTROL_PADCONF_MCA2_AXR0		;	// 0x0A68
	REG32 CONTROL_PADCONF_MCA2_AXR1		;	// 0x0A6C
	REG32 CONTROL_PADCONF_MMC_POW		;	// 0x0A70
	REG32 CONTROL_PADCONF_MMC_CLK		;	// 0x0A74
	REG32 CONTROL_PADCONF_MMC_CMD		;	// 0x0A78
	REG32 CONTROL_PADCONF_MMC_DAT0		;	// 0x0A7C
	REG32 CONTROL_PADCONF_MMC_DAT1_SDIRQ;	// 0x0A80
	REG32 CONTROL_PADCONF_MMC_DAT2_SDRW	;	// 0x0A84
	REG32 CONTROL_PADCONF_MMC_DAT3		;	// 0x0A88
	REG32 CONTROL_PADCONF_MMC_SDCD		;	// 0x0A8C
	REG32 CONTROL_PADCONF_MMC_SDWP		;	// 0x0A90
	REG32 CONTROL_PADCONF_SPI_SCLK		;	// 0x0A94
	REG32 CONTROL_PADCONF_SPI_SCS0		;	// 0x0A98
	REG32 CONTROL_PADCONF_SPI_SCS1		;	// 0x0A9C
	REG32 CONTROL_PADCONF_SPI_SCS2		;	// 0x0AA0
	REG32 CONTROL_PADCONF_SPI_SCS3		;	// 0x0AA4
	REG32 CONTROL_PADCONF_SPI_D0		;	// 0x0AA8
	REG32 CONTROL_PADCONF_SPI_D1		;	// 0x0AAC
	REG32 CONTROL_PADCONF_UART0_RXD		;	// 0x0AB0
	REG32 CONTROL_PADCONF_UART0_TXD		;	// 0x0AB4
	REG32 CONTROL_PADCONF_UART0_RTSN	;	// 0x0AB8
	REG32 CONTROL_PADCONF_UART0_CTSN	;	// 0x0ABC
	REG32 CONTROL_PADCONF_UART0_DTRN	;	// 0x0AC0
	REG32 CONTROL_PADCONF_UART0_DSRN	;	// 0x0AC4
	REG32 CONTROL_PADCONF_UART0_DCDN	;	// 0x0AC8
	REG32 CONTROL_PADCONF_UART0_RIN		;	// 0x0ACC
	REG32 CONTROL_PADCONF_UART1_RXD		;	// 0x0AD0
	REG32 CONTROL_PADCONF_UART1_TXD		;	// 0x0AD4
	REG32 CONTROL_PADCONF_UART1_RTSN	;	// 0x0AD8
	REG32 CONTROL_PADCONF_UART1_CTSN	;	// 0x0ADC
	REG32 CONTROL_PADCONF_UART2_RXD		;	// 0x0AE0
	REG32 CONTROL_PADCONF_UART2_TXD		;	// 0x0AE4
	REG32 CONTROL_PADCONF_UART2_RTSN	;	// 0x0AE8
	REG32 CONTROL_PADCONF_UART2_CTSN	;	// 0x0AEC
	REG32 CONTROL_PADCONF_SC0_DET		;	// 0x0AF0
	REG32 CONTROL_PADCONF_SC0_RST		;	// 0x0AF4
	REG32 CONTROL_PADCONF_SC0_CLK		;	// 0x0AF8
	REG32 CONTROL_PADCONF_SC0_DATA		;	// 0x0AFC
	REG32 CONTROL_PADCONF_SC0_C4		;	// 0x0B00
	REG32 CONTROL_PADCONF_SC0_VCCEN		;	// 0x0B04
	REG32 CONTROL_PADCONF_SC0_VPPEN		;	// 0x0B08
	REG32 CONTROL_PADCONF_SC1_DET		;	// 0x0B0C
	REG32 CONTROL_PADCONF_SC1_RST		;	// 0x0B10
	REG32 CONTROL_PADCONF_SC1_CLK		;	// 0x0B14
	REG32 CONTROL_PADCONF_SC1_DATA		;	// 0x0B18
	REG32 CONTROL_PADCONF_SC1_C4		;	// 0x0B1C
	REG32 CONTROL_PADCONF_SC1_VCCEN		;	// 0x0B20
	REG32 CONTROL_PADCONF_SC1_VPPEN		;	// 0x0B24
	REG32 CONTROL_PADCONF_TIM4_OUT		;	// 0x0B28
	REG32 CONTROL_PADCONF_TIM5_OUT		;	// 0x0B2C
	REG32 CONTROL_PADCONF_TIM6_OUT		;	// 0x0B30
	REG32 CONTROL_PADCONF_TIM7_OUT		;	// 0x0B34
	REG32 CONTROL_PADCONF_GPMC_CS0		;	// 0x0B38
	REG32 CONTROL_PADCONF_GPMC_CS1		;	// 0x0B3C
	REG32 CONTROL_PADCONF_GPMC_CS2		;	// 0x0B40
	REG32 CONTROL_PADCONF_GPMC_CS3		;	// 0x0B44
	REG32 CONTROL_PADCONF_GPMC_CS4		;	// 0x0B48
	REG32 CONTROL_PADCONF_GPMC_CS5		;	// 0x0B4C
	REG32 CONTROL_PADCONF_GPMC_WEN		;	// 0x0B50
	REG32 CONTROL_PADCONF_GPMC_OEN_REN	;	// 0x0B54
	REG32 CONTROL_PADCONF_GPMC_BE0N_CLE	;	// 0x0B58
	REG32 CONTROL_PADCONF_GPMC_BE1N		;	// 0x0B5C
	REG32 CONTROL_PADCONF_GPMC_ADVN_ALE	;	// 0x0B60
	REG32 CONTROL_PADCONF_GPMC_DIR		;	// 0x0B64
	REG32 CONTROL_PADCONF_GPMC_WPN		;	// 0x0B68
	REG32 CONTROL_PADCONF_GPMC_WAIT		;	// 0x0B6C
	REG32 CONTROL_PADCONF_GPMC_A0		;	// 0x0B70
	REG32 CONTROL_PADCONF_GPMC_A1		;	// 0x0B74
	REG32 CONTROL_PADCONF_GPMC_A2		;	// 0x0B78
	REG32 CONTROL_PADCONF_GPMC_A3		;	// 0x0B7C
	REG32 CONTROL_PADCONF_GPMC_A4		;	// 0x0B80
	REG32 CONTROL_PADCONF_GPMC_A5		;	// 0x0B84
	REG32 CONTROL_PADCONF_GPMC_A6		;	// 0x0B88
	REG32 CONTROL_PADCONF_GPMC_A7		;	// 0x0B8C
	REG32 CONTROL_PADCONF_GPMC_A8		;	// 0x0B90
	REG32 CONTROL_PADCONF_GPMC_A9		;	// 0x0B94
	REG32 CONTROL_PADCONF_GPMC_A10		;	// 0x0B98
	REG32 CONTROL_PADCONF_GPMC_A11		;	// 0x0B9C
	REG32 CONTROL_PADCONF_GPMC_A27		;	// 0x0BA0
	REG32 CONTROL_PADCONF_GPMC_D0		;	// 0x0BA4
	REG32 CONTROL_PADCONF_GPMC_D1		;	// 0x0BA8
	REG32 CONTROL_PADCONF_GPMC_D2		;	// 0x0BAC
	REG32 CONTROL_PADCONF_GPMC_D3		;	// 0x0BB0
	REG32 CONTROL_PADCONF_GPMC_D4		;	// 0x0BB4
	REG32 CONTROL_PADCONF_GPMC_D5		;	// 0x0BB8
	REG32 CONTROL_PADCONF_GPMC_D6		;	// 0x0BBC
	REG32 CONTROL_PADCONF_GPMC_D7		;	// 0x0BC0
	REG32 CONTROL_PADCONF_GPMC_D8		;	// 0x0BC4
	REG32 CONTROL_PADCONF_GPMC_D9		;	// 0x0BC8
	REG32 CONTROL_PADCONF_GPMC_D10		;	// 0x0BCC
	REG32 CONTROL_PADCONF_GPMC_D11		;	// 0x0BD0
	REG32 CONTROL_PADCONF_GPMC_D12		;	// 0x0BD4
	REG32 CONTROL_PADCONF_GPMC_D13		;	// 0x0BD8
	REG32 CONTROL_PADCONF_GPMC_D14		;	// 0x0BDC
	REG32 CONTROL_PADCONF_GPMC_D15		;	// 0x0BE0
	REG32 CONTROL_PADCONF_GPMC_CLK		;	// 0x0BE4
	REG32 CONTROL_PADCONF_GMII0_COL		;	// 0x0BE8
	REG32 CONTROL_PADCONF_GMII0_CRS		;	// 0x0BEC
	REG32 CONTROL_PADCONF_GMII0_GTXCLK	;	// 0x0BF0
	REG32 CONTROL_PADCONF_GMII0_RXCLK	;	// 0x0BF4
	REG32 CONTROL_PADCONF_GMII0_RXD0	;	// 0x0BF8
	REG32 CONTROL_PADCONF_GMII0_RXD1	;	// 0x0BFC
	REG32 CONTROL_PADCONF_GMII0_RXD2	;	// 0x0C00
	REG32 CONTROL_PADCONF_GMII0_RXD3	;	// 0x0C04
	REG32 CONTROL_PADCONF_GMII0_RXD4	;	// 0x0C08
	REG32 CONTROL_PADCONF_GMII0_RXD5	;	// 0x0C0C
	REG32 CONTROL_PADCONF_GMII0_RXD6	;	// 0x0C10
	REG32 CONTROL_PADCONF_GMII0_RXD7	;	// 0x0C14
	REG32 CONTROL_PADCONF_GMII0_RXDV	;	// 0x0C18
	REG32 CONTROL_PADCONF_GMII0_RXER	;	// 0x0C1C
	REG32 CONTROL_PADCONF_GMII0_TXCLK	;	// 0x0C20
	REG32 CONTROL_PADCONF_GMII0_TXD0	;	// 0x0C24
	REG32 CONTROL_PADCONF_GMII0_TXD1	;	// 0x0C28
	REG32 CONTROL_PADCONF_GMII0_TXD2	;	// 0x0C2C
	REG32 CONTROL_PADCONF_GMII0_TXD3	;	// 0x0C30
	REG32 CONTROL_PADCONF_GMII0_TXD4	;	// 0x0C34
	REG32 CONTROL_PADCONF_GMII0_TXD5	;	// 0x0C38
	REG32 CONTROL_PADCONF_GMII0_TXD6	;	// 0x0C3C
	REG32 CONTROL_PADCONF_GMII0_TXD7	;	// 0x0C40
	REG32 CONTROL_PADCONF_GMII0_TXEN	;	// 0x0C44
	REG32 CONTROL_PADCONF_MDIO_MCLK		;	// 0x0C48
	REG32 CONTROL_PADCONF_MDIO_MDIO		;	// 0x0C4C
	REG32 CONTROL_PADCONF_VLYNQ_CLOCK	;	// 0x0C50
	REG32 CONTROL_PADCONF_VLYNQ_SCRUN	;	// 0x0C54
	REG32 CONTROL_PADCONF_VLYNQ_TXD0	;	// 0x0C58
	REG32 CONTROL_PADCONF_VLYNQ_TXD1	;	// 0x0C5C
	REG32 CONTROL_PADCONF_VLYNQ_TXD2	;	// 0x0C60
	REG32 CONTROL_PADCONF_VLYNQ_TXD3	;	// 0x0C64
	REG32 CONTROL_PADCONF_VLYNQ_RXD0	;	// 0x0C68
	REG32 CONTROL_PADCONF_VLYNQ_RXD1	;	// 0x0C6C
	REG32 CONTROL_PADCONF_VLYNQ_RXD2	;	// 0x0C70
	REG32 CONTROL_PADCONF_VLYNQ_RXD3	;	// 0x0C74
	REG32 CONTROL_PADCONF_IIC0_SCL		;	// 0x0C78
	REG32 CONTROL_PADCONF_IIC0_SDA		;	// 0x0C7C
	REG32 CONTROL_PADCONF_IIC1_SCL		;	// 0x0C80
	REG32 CONTROL_PADCONF_IIC1_SDA		;	// 0x0C84
	REG32 CONTROL_PADCONF_GP0_IO0		;	// 0x0C88
	REG32 CONTROL_PADCONF_GP0_IO1		;	// 0x0C8C
	REG32 CONTROL_PADCONF_GP0_IO2		;	// 0x0C90
	REG32 CONTROL_PADCONF_GP0_IO3		;	// 0x0C94
	REG32 CONTROL_PADCONF_GP0_IO4		;	// 0x0C98
	REG32 CONTROL_PADCONF_GP0_IO5		;	// 0x0C9C
	REG32 CONTROL_PADCONF_GP0_IO6		;	// 0x0CA0
	REG32 CONTROL_PADCONF_GP0_IO7		;	// 0x0CA4
	REG32 CONTROL_PADCONF_GP1_IO30		;	// 0x0CA8
	REG32 CONTROL_PADCONF_GP1_IO31		;	// 0x0CAC
	REG32 CONTROL_PADCONF_HDMI_SCL		;	// 0x0CB0
	REG32 CONTROL_PADCONF_HDMI_SDA		;	// 0x0CB4
	REG32 CONTROL_PADCONF_HDMI_CEC		;	// 0x0CB8
	REG32 CONTROL_PADCONF_HDMI_HPDET	;	// 0x0CBC
	REG32 CONTROL_PADCONF_TCLK			;	// 0x0CC0
	REG32 CONTROL_PADCONF_RTCK			;	// 0x0CC4
	REG32 CONTROL_PADCONF_TDI			;	// 0x0CC8
	REG32 CONTROL_PADCONF_TDO			;	// 0x0CCC
	REG32 CONTROL_PADCONF_TMS			;	// 0x0CD0
	REG32 CONTROL_PADCONF_TRSTN			;	// 0x0CD4
	REG32 CONTROL_PADCONF_EMU0			;	// 0x0CD8
	REG32 CONTROL_PADCONF_EMU1			;	// 0x0CDC
	REG32 CONTROL_PADCONF_EMU2			;	// 0x0CE0
	REG32 CONTROL_PADCONF_EMU3			;	// 0x0CE4
	REG32 CONTROL_PADCONF_EMU4			;	// 0x0CE8
	REG32 CONTROL_PADCONF_RESETN		;	// 0x0CEC
	REG32 CONTROL_PADCONF_NMIN			;	// 0x0CF0
	REG32 CONTROL_PADCONF_RSTOUTN		;	// 0x0CF4
	REG32 CONTROL_PADCONF_WD_OUT		;	// 0x0CF8
	REG32 CONTROL_PADCONF_CLKOUT		;	// 0x0CFC
	REG32 CONTROL_PADCONF_CLKIN32		;	// 0x0D00
	REG32 CONTROL_PADCONF_USB0_DRVVBUS	;	// 0x0D04
	REG32 CONTROL_PADCONF_USB1_DRVVBUS	;	// 0x0D08
} AM389X_SYSC_PADCONFS_REGS;


//------------------------------------------------------------------------------
#define PULL_INACTIVE                   (0 << 3)

#if 0
#define PULL_DOWN                       (1 << 3)
#define PULL_UP                         (3 << 3)
#else
#define PULL_DISABLE                    (1 << 3)
#define PULL_ENABLE                     (0 << 3)
#define PULL_UP                         (1 << 4)
#define PULL_DOWN                       (0 << 4)
#endif

#define MUX_MODE_0                      (0 << 0)
#define MUX_MODE_1                      (1 << 0)
#define MUX_MODE_2                      (2 << 0)
#define MUX_MODE_3                      (3 << 0)
#define MUX_MODE_4                      (4 << 0)
#define MUX_MODE_5                      (5 << 0)
#define MUX_MODE_6                      (6 << 0)
#define MUX_MODE_7                      (7 << 0)

#define INPUT_ENABLE                    (1 << 8)
#define INPUT_DISABLE                   (0 << 8)

#endif // __AM389X_CONFIG_H

