/*
================================================================================
*             Texas Instruments OMAP(TM) Platform Software
* (c) Copyright Texas Instruments, Incorporated. All Rights Reserved.
*
* Use of this software is controlled by the terms and conditions found
* in the license agreement under which this software has been supplied.
*
================================================================================
*/

//------------------------------------------------------------------------------
//
//  File:  am33x_config.h
//
//  This header file is comprised of control pad configuration module register
//  details defined as structures and macros for configuring the pads.
//

#ifndef __AM33X_CONFIG_H
#define __AM33X_CONFIG_H

//------------------------------------------------------------------------------
// System PAD Configuration Registers
#include <omap_types.h>

typedef volatile struct {
    REG32	CONTROL_REVISION;		// offset 0x0000 
    REG32	CONTROL_HWINFO;			// offset 0x0000 
    UINT32	zzzReserved01[2];
    REG32	CONTROL_SYSCONFIG;		// offset 0x0010
    UINT32	zzzReserved02[11];		// 0x0014-0x003C
} AM33X_OCP_CONF_REGS;

typedef volatile struct {
	REG32	CONTROL_STATUS;			// 0x0040
	REG32	BOOTSTAS;				// 0x0044
	UINT32	res_0008_00fc[46];
} AM33X_DEVICE_BOOT_REGS;

typedef volatile struct {			// 0x100-0x2fc
	REG32	CONTROL_SEC_CTRL;			// 100H	8.1.6.196
	REG32	CONTROL_SEC_SW;				// 104H	8.1.6.207
	REG32	CONTROL_SEC_EMU;			// 108H	8.1.6.217
	REG32	SECURE_EMIF_SDRAM_CONFIG;	// 110H	8.1.6.238
	REG32	SECURE_EMIF_SDRAM_CONFIG_2;	// 114H	8.1.6.249
	REG32	CONTROL_SW_CFG;				// 118H	8.1.6.260
	REG32	CONTROL_SW_CCFG;			// 11CH	8.1.6.271
	REG32	CONTROL_MPK_0;				// 120H	8.1.6.282
	REG32	CONTROL_MPK_1;				// 124H	8.1.6.286
	REG32	CONTROL_MPK_2;				// 128H	8.1.6.287
	REG32	CONTROL_MPK_3;				// 12CH	8.1.6.288
	REG32	CONTROL_MPK_4;				// 130H	8.1.6.289
	REG32	CONTROL_MPK_5;				// 134H	8.1.6.290
	REG32	CONTROL_MPK_6;				// 138H	8.1.6.291
	REG32	CONTROL_MPK_7;				// 13CH	8.1.6.292
	REG32	CONTROL_SWRV_0;				// 140H	8.1.6.293
	REG32	CONTROL_SWRV_1;				// 144H	8.1.6.294
	REG32	CONTROL_SWRV_2;				// 148H	8.1.6.295
	REG32	CONTROL_SWRV_3;				// 14CH	8.1.6.296
	REG32	CONTROL_SWRV_4;				// 150H	8.1.6.297
	REG32	CONTROL_SWRV_5;				// 154H	8.1.6.298
	REG32	CONTROL_SWRV_6;				// 158H	8.1.6.299
	UINT32	res_015C_017C[9];
	REG32	CONTROL_SEC_TAP;			// 180H	8.1.6.305
	REG32	CONTROL_SEC_TAP_CMDIN;		// 184H	8.1.6.306
	REG32	CONTROL_SEC_TAP_CMDOUT;		// 188H	8.1.6.307
	REG32	CONTROL_SEC_TAP_DATIN;		// 18CH	8.1.6.308
	REG32	CONTROL_SEC_TAP_DATOUT;		// 190H	8.1.6.314
	UINT32	res_0194;
	REG32	CONTROL_MREQDOMAIN_EXP1;	// 198H	8.1.6.330
	REG32	CONTROL_MREQDOMAIN_EXP2;	// 19CH	8.1.6.332
	REG32	L3_HW_FW_EXP_VAL_CONF0;		// 1A0H	8.1.6.333
	REG32	L3_HW_FW_EXP_VAL_CONF1;		// 1A4H	8.1.6.334
	REG32	L4_HW_FW_EXP_VAL_CONF;		// 1A8H	8.1.6.335
	REG32	CONTROL_SEC_LOAD_FW_EXP_VAL;// 1ACH	8.1.6.336
	REG32	CONTROL_SEC_CTRL_RO;		// 1B4H	8.1.6.337
	REG32	EMIF_OBFUSCATION_KEY;		// 1B8H	8.1.6.338
	REG32	SEC_CLK_CTRL;				// 1BCH	8.1.6.339
	UINT32	res_01C0_01D0[5];
	REG32	CONTROL_MREQDOMAIN_EXP3;	// 1D4H	8.1.6.340
	UINT32	res_01D8__01FC[10];
	REG32	CONTROL_CEK_0;				// 200H	8.1.6.353
	REG32	CONTROL_CEK_1;				// 204H	8.1.6.357
	REG32	CONTROL_CEK_2;				// 208H	8.1.6.362
	REG32	CONTROL_CEK_3;				// 20CH	8.1.6.364
	REG32	CONTROL_CEK_BCH_0;			// 210H	8.1.6.365
	REG32	CONTROL_CEK_BCH_1;			// 214H	8.1.6.366
	REG32	CONTROL_CEK_BCH_2;			// 218H	8.1.6.367
	REG32	CONTROL_CEK_BCH_3;			// 21CH	8.1.6.368
	REG32	CONTROL_CEK_BCH_4;			// 220H	8.1.6.369
	REG32	CONTROL_MSV_0;				// 224H	8.1.6.370
	REG32	CONTROL_MSV_BCH_0;			// 228H	8.1.6.371
	REG32	CONTROL_MSV_BCH_1;			// 22CH	8.1.6.372
	UINT32	res_0230_023C[4];
	REG32	CONTROL_SEC_STATUS;			// 240H	8.1.6.373
	REG32	CONTROL_SECMEM_STATUS;		// 244H	8.1.6.374
	REG32	CONTROL_SEC_ERR_STAT_FUNC0;	// 248H	8.1.6.375
	REG32	CONTROL_SEC_ERR_STAT_FUNC1;	// 24CH	8.1.6.376
	REG32	CONTROL_SEC_ERR_STAT_DBUG0;	// 250H	8.1.6.377
	REG32	CONTROL_SEC_ERR_STAT_DBUG1;	// 254H	8.1.6.378
	UINT32	res_0258_025C[2];
	REG32	CONTROL_KEK_SW_0;			// 260H	8.1.6.379
	REG32	CONTROL_KEK_SW_1;			// 264H	8.1.6.380
	REG32	CONTROL_KEK_SW_2;			// 268H	8.1.6.381
	REG32	CONTROL_KEK_SW_3;			// 26CH	8.1.6.385
	UINT32	res_0270_027C[4];
	REG32	CONTROL_CMPK_BCH_0;			// 280H	8.1.6.392
	REG32	CONTROL_CMPK_BCH_1;			// 284H	8.1.6.393
	REG32	CONTROL_CMPK_BCH_2;			// 288H	8.1.6.394
	REG32	CONTROL_CMPK_BCH_3;			// 28CH	8.1.6.395
	REG32	CONTROL_CMPK_BCH_4;			// 290H	8.1.6.396
	REG32	CONTROL_CMPK_BCH_5;			// 294H	8.1.6.397
	REG32	CONTROL_CMPK_BCH_6;			// 298H	8.1.6.398
	REG32	CONTROL_CMPK_BCH_7;			// 29CH	8.1.6.399
	REG32	CONTROL_CMPK_BCH_8;			// 2A0H	8.1.6.400
	UINT32	res_02A4_02AC[3];
	REG32	CONTROL_CMPK_0;				// 2B0H	8.1.6.402
	REG32	CONTROL_CMPK_1;				// 2B4H	8.1.6.403
	REG32	CONTROL_CMPK_2;				// 2B8H	8.1.6.404
	REG32	CONTROL_CMPK_3;				// 2BCH	8.1.6.405
	REG32	CONTROL_CMPK_4;				// 2C0H	8.1.6.406
	REG32	CONTROL_CMPK_5;				// 2C4H	8.1.6.407
	REG32	CONTROL_CMPK_6;				// 2C8H	8.1.6.408
	REG32	CONTROL_CMPK_7;				// 2CCH	8.1.6.409
	UINT32	res_02D0_2FC[12];
} AM33X_SECnFUSE_KEY_REGS;


typedef volatile struct {			// 0x300-0x3fc
	UINT32	placeholder[64];		// TODO: make structure
} AM33X_SECURE_SM_REGS;

typedef volatile struct { 			// 0x400-0x5fc
	UINT32	res_0400_0418[6];
	REG32	CORTEX_VBBLDO_CTRL		; //	41CH	8.1.6.2
	UINT32	res_0420_0424[2];
	REG32	CORE_SLDO_CTRL			; //	428H	8.1.6.3
	REG32	MPU_SLDO_CTRL			; //	42CH	8.1.6.4
	UINT32	res_0430_043C[4];
	REG32	REFCLK_LJCBLDO_CTRL		; //	440H	8.1.6.5
	REG32	CLK32KDIVRATIO_CTRL		; //	444H	8.1.6.6
	REG32	BANDGAP_CTRL			; //	448H	8.1.6.7
	REG32	BANDGAP_TRIM			; //	44CH	8.1.6.8
	UINT32	res_0450_0454[2];
	REG32	PLL_CLKINPULOW_CTRL		; //	458H	8.1.6.9
	UINT32	res_045C_0464[3];
	REG32	MOSC_CTRL				; //	468H	8.1.6.10
	REG32	RCOSC_CTRL				; //	46CH	8.1.6.11
	REG32	DEEPSLEEP_CTRL			; //	470H	8.1.6.12
	UINT32	res_0474_04FC[35];
	REG32	PE_SCRATCHPAD_0			; //	500H	8.1.6.14
	REG32	PE_SCRATCHPAD_1			; //	504H	8.1.6.15
	REG32	PE_SCRATCHPAD_2			; //	508H	8.1.6.16
	REG32	PE_SCRATCHPAD_3			; //	50CH	8.1.6.17
	UINT32	res_0510_05FC[60];
} AM33X_SUPPL_DEVICE_CTRL_REGS;

typedef volatile struct { 			// 0x600-0x7fc
	REG32	DEVICE_ID				; //	600H	8.1.6.18
	REG32	DEV_FEATURE				; //	604H	8.1.6.19
	REG32	INIT_PRIORITY_0			; //	608H	8.1.6.20
	REG32	INIT_PRIORITY_1			; //	60CH	8.1.6.21
	REG32	MMU_CFG					; //	610H	8.1.6.22
	REG32	TPTC_CFG				; //	614H	8.1.6.23
	REG32	OCMC_CFG				; //	618H	8.1.6.24
	UINT32	res_061C;
	REG32	USB_CTRL0				; //	620H	8.1.6.25
	REG32	USB_STS0				; //	624H	8.1.6.26
	REG32	USB_CTRL1				; //	628H	8.1.6.27
	REG32	USB_STS1				; //	62CH	8.1.6.28
	REG32	MAC_ID0_LO				; //	630H	8.1.6.29
	REG32	MAC_ID0_HI				; //	634H	8.1.6.30
	REG32	MAC_ID1_LO				; //	638H	8.1.6.31
	REG32	MAC_ID1_HI				; //	63CH	8.1.6.32
	UINT32	res_0640;
	REG32	DCAN_RAMINIT			; //	644H	8.1.6.34
	REG32	USB_WKUP_CTRL			; //	648H	8.1.6.35
	UINT32	res_064C;
	REG32	GMII_SEL				; //	650H	8.1.6.36
	UINT32	res_0654_0660[4];
	REG32	PWMSS_CTRL				; //	664H	8.1.6.37
	UINT32	res_0668_066C[2];
	REG32	MREQPRIO_0				; //	670H	8.1.6.38
	REG32	MREQPRIO_1				; //	674H	8.1.6.39
	UINT32	res_0678_068C[6];
	REG32	HW_EVENT_SEL_GRP1		; //	690H	8.1.6.40
	REG32	HW_EVENT_SEL_GRP2		; //	694H	8.1.6.41
	REG32	HW_EVENT_SEL_GRP3		; //	698H	8.1.6.42
	REG32	HW_EVENT_SEL_GRP4		; //	69CH	8.1.6.43
	REG32	SMRT_CTRL				; //	6A0H	8.1.6.44
	REG32	SABTOOTH_HW_DEBUG_SEL	; //	6A4H	8.1.6.45
	REG32	SABTOOTH_HW_DBG_INFO	; //	6A8H	8.1.6.46
	UINT32	res_06AC_06BC[5];
	REG32	MRGN_MODE0				; //	6C0H	8.1.6.47
	REG32	MRGN_MODE1				; //	6C4H	8.1.6.48
	UINT32	res_06C8_076C[42];
	REG32	VDD_MPU_OPP_050			; //	770H	8.1.6.58
	REG32	VDD_MPU_OPP_100			; //	774H	8.1.6.59
	REG32	VDD_MPU_OPP_119			; //	778H	8.1.6.60
	REG32	VDD_MPU_OPP_TURBO		; //	77CH	8.1.6.61
	UINT32	res_0780_07B4[14];
	REG32	VDD_CORE_OPP_050		; //	7B8H	8.1.6.62
	REG32	VDD_CORE_OPP_100		; //	7BCH	8.1.6.63
	UINT32	res_07C0_07CC[4];
	REG32	BB_SCALE				; //	7D0H	8.1.6.64
	UINT32	res_07D4_07F0[8];
	REG32	USB_VID_PID				; //	7F4H	8.1.6.65
	REG32	RESERVED				; //	7F8H	8.1.6.437
	REG32	EFUSE_SMA				; //	7FCH	8.1.6.67
} AM33X_DEVICE_CONF_REGS;


#define PAD_ID(x) (offsetof(AM33X_SYSC_PADCONFS_REGS,CONF_##x)/sizeof(UINT32))

// AM33X_SYSC_PADCONFS_REGS
typedef volatile struct {
	REG32	CONF_GPMC_AD0			; //	800H	8.1.6.68
	REG32	CONF_GPMC_AD1			; //	804H	8.1.6.69
	REG32	CONF_GPMC_AD2			; //	808H	8.1.6.70
	REG32	CONF_GPMC_AD3			; //	80CH	8.1.6.71
	REG32	CONF_GPMC_AD4			; //	810H	8.1.6.72
	REG32	CONF_GPMC_AD5			; //	814H	8.1.6.73
	REG32	CONF_GPMC_AD6			; //	818H	8.1.6.74
	REG32	CONF_GPMC_AD7			; //	81CH	8.1.6.75
	REG32	CONF_GPMC_AD8			; //	820H	8.1.6.76
	REG32	CONF_GPMC_AD9			; //	824H	8.1.6.77
	REG32	CONF_GPMC_AD10			; //	828H	8.1.6.78
	REG32	CONF_GPMC_AD11			; //	82CH	8.1.6.79
	REG32	CONF_GPMC_AD12			; //	830H	8.1.6.80
	REG32	CONF_GPMC_AD13			; //	834H	8.1.6.81
	REG32	CONF_GPMC_AD14			; //	838H	8.1.6.82
	REG32	CONF_GPMC_AD15			; //	83CH	8.1.6.83
	REG32	CONF_GPMC_A0			; //	840H	8.1.6.84
	REG32	CONF_GPMC_A1			; //	844H	8.1.6.85
	REG32	CONF_GPMC_A2			; //	848H	8.1.6.86
	REG32	CONF_GPMC_A3			; //	84CH	8.1.6.87
	REG32	CONF_GPMC_A4			; //	850H	8.1.6.88
	REG32	CONF_GPMC_A5			; //	854H	8.1.6.89
	REG32	CONF_GPMC_A6			; //	858H	8.1.6.90
	REG32	CONF_GPMC_A7			; //	85CH	8.1.6.91
	REG32	CONF_GPMC_A8			; //	860H	8.1.6.92
	REG32	CONF_GPMC_A9			; //	864H	8.1.6.93
	REG32	CONF_GPMC_A10			; //	868H	8.1.6.94
	REG32	CONF_GPMC_A11			; //	86CH	8.1.6.95
	REG32	CONF_GPMC_WAIT0			; //	870H	8.1.6.96
	REG32	CONF_GPMC_WPN			; //	874H	8.1.6.97
	REG32	CONF_GPMC_BE1N			; //	878H	8.1.6.98
	REG32	CONF_GPMC_CSN0			; //	87CH	8.1.6.99
	REG32	CONF_GPMC_CSN1			; //	880H	8.1.6.100
	REG32	CONF_GPMC_CSN2			; //	884H	8.1.6.101
	REG32	CONF_GPMC_CSN3			; //	888H	8.1.6.102
	REG32	CONF_GPMC_CLK			; //	88CH	8.1.6.103
	REG32	CONF_GPMC_ADVN_ALE		; //	890H	8.1.6.104
	REG32	CONF_GPMC_OEN_REN		; //	894H	8.1.6.105
	REG32	CONF_GPMC_WEN			; //	898H	8.1.6.106
	REG32	CONF_GPMC_BE0N_CLE		; //	89CH	8.1.6.107
	REG32	CONF_LCD_DATA0			; //	8A0H	8.1.6.108
	REG32	CONF_LCD_DATA1			; //	8A4H	8.1.6.109
	REG32	CONF_LCD_DATA2			; //	8A8H	8.1.6.110
	REG32	CONF_LCD_DATA3			; //	8ACH	8.1.6.111
	REG32	CONF_LCD_DATA4			; //	8B0H	8.1.6.112
	REG32	CONF_LCD_DATA5			; //	8B4H	8.1.6.113
	REG32	CONF_LCD_DATA6			; //	8B8H	8.1.6.114
	REG32	CONF_LCD_DATA7			; //	8BCH	8.1.6.115
	REG32	CONF_LCD_DATA8			; //	8C0H	8.1.6.116
	REG32	CONF_LCD_DATA9			; //	8C4H	8.1.6.117
	REG32	CONF_LCD_DATA10			; //	8C8H	8.1.6.118
	REG32	CONF_LCD_DATA11			; //	8CCH	8.1.6.119
	REG32	CONF_LCD_DATA12			; //	8D0H	8.1.6.120
	REG32	CONF_LCD_DATA13			; //	8D4H	8.1.6.121
	REG32	CONF_LCD_DATA14			; //	8D8H	8.1.6.122
	REG32	CONF_LCD_DATA15			; //	8DCH	8.1.6.123
	REG32	CONF_LCD_VSYNC			; //	8E0H	8.1.6.124
	REG32	CONF_LCD_HSYNC			; //	8E4H	8.1.6.125
	REG32	CONF_LCD_PCLK			; //	8E8H	8.1.6.126
	REG32	CONF_LCD_AC_BIAS_EN		; //	8ECH	8.1.6.127
	REG32	CONF_MMC0_DAT3			; //	8F0H	8.1.6.128
	REG32	CONF_MMC0_DAT2			; //	8F4H	8.1.6.129
	REG32	CONF_MMC0_DAT1			; //	8F8H	8.1.6.130
	REG32	CONF_MMC0_DAT0			; //	8FCH	8.1.6.131
	REG32	CONF_MMC0_CLK			; //	900H	8.1.6.132
	REG32	CONF_MMC0_CMD			; //	904H	8.1.6.133
	REG32	CONF_MII1_COL			; //	908H	8.1.6.134
	REG32	CONF_MII1_CRS			; //	90CH	8.1.6.135
	REG32	CONF_MII1_RXERR			; //	910H	8.1.6.136
	REG32	CONF_MII1_TXEN			; //	914H	8.1.6.137
	REG32	CONF_MII1_RXDV			; //	918H	8.1.6.138
	REG32	CONF_MII1_TXD3			; //	91CH	8.1.6.139
	REG32	CONF_MII1_TXD2			; //	920H	8.1.6.140
	REG32	CONF_MII1_TXD1			; //	924H	8.1.6.141
	REG32	CONF_MII1_TXD0			; //	928H	8.1.6.142
	REG32	CONF_MII1_TXCLK			; //	92CH	8.1.6.143
	REG32	CONF_MII1_RXCLK			; //	930H	8.1.6.144
	REG32	CONF_MII1_RXD3			; //	934H	8.1.6.145
	REG32	CONF_MII1_RXD2			; //	938H	8.1.6.146
	REG32	CONF_MII1_RXD1			; //	93CH	8.1.6.147
	REG32	CONF_MII1_RXD0			; //	940H	8.1.6.148
	REG32	CONF_RMII1_REFCLK		; //	944H	8.1.6.149
	REG32	CONF_MDIO_DATA			; //	948H	8.1.6.150
	REG32	CONF_MDIO_CLK			; //	94CH	8.1.6.151
	REG32	CONF_SPI0_SCLK			; //	950H	8.1.6.152
	REG32	CONF_SPI0_D0			; //	954H	8.1.6.153
	REG32	CONF_SPI0_D1			; //	958H	8.1.6.154
	REG32	CONF_SPI0_CS0			; //	95CH	8.1.6.155
	REG32	CONF_SPI0_CS1			; //	960H	8.1.6.156
	REG32	CONF_ECAP0_IN_PWM0_OUT	; //	964H	8.1.6.157
	REG32	CONF_UART0_CTSN			; //	968H	8.1.6.158
	REG32	CONF_UART0_RTSN			; //	96CH	8.1.6.159
	REG32	CONF_UART0_RXD			; //	970H	8.1.6.160
	REG32	CONF_UART0_TXD			; //	974H	8.1.6.161
	REG32	CONF_UART1_CTSN			; //	978H	8.1.6.162
	REG32	CONF_UART1_RTSN			; //	97CH	8.1.6.163
	REG32	CONF_UART1_RXD			; //	980H	8.1.6.164
	REG32	CONF_UART1_TXD			; //	984H	8.1.6.165
	REG32	CONF_I2C0_SDA			; //	988H	8.1.6.166
	REG32	CONF_I2C0_SCL			; //	98CH	8.1.6.167
	REG32	CONF_MCASP0_ACLKX		; //	990H	8.1.6.168
	REG32	CONF_MCASP0_FSX			; //	994H	8.1.6.169
	REG32	CONF_MCASP0_AXR0		; //	998H	8.1.6.170
	REG32	CONF_MCASP0_AHCLKR		; //	99CH	8.1.6.171
	REG32	CONF_MCASP0_ACLKR		; //	9A0H	8.1.6.172
	REG32	CONF_MCASP0_FSR			; //	9A4H	8.1.6.173
	REG32	CONF_MCASP0_AXR1		; //	9A8H	8.1.6.174
	REG32	CONF_MCASP0_AHCLKX		; //	9ACH	8.1.6.175
	REG32	CONF_XDMA_EVENT_INTR0	; //	9B0H	8.1.6.176
	REG32	CONF_XDMA_EVENT_INTR1	; //	9B4H	8.1.6.177
	REG32	CONF_NRESETIN_OUT		; //	9B8H	8.1.6.178
	REG32	CONF_PORZ				; //	9BCH	8.1.6.179
	REG32	CONF_NNMI				; //	9C0H	8.1.6.180
	REG32	CONF_OSC0_IN			; //	9C4H	8.1.6.181
	REG32	CONF_OSC0_OUT			; //	9C8H	8.1.6.182
	REG32	CONF_OSC0_VSS			; //	9CCH	8.1.6.183
	REG32	CONF_TMS				; //	9D0H	8.1.6.184
	REG32	CONF_TDI				; //	9D4H	8.1.6.185
	REG32	CONF_TDO				; //	9D8H	8.1.6.186
	REG32	CONF_TCK				; //	9DCH	8.1.6.187
	REG32	CONF_NTRST				; //	9E0H	8.1.6.188
	REG32	CONF_EMU0				; //	9E4H	8.1.6.189
	REG32	CONF_EMU1				; //	9E8H	8.1.6.190
	REG32	CONF_OSC1_IN			; //	9ECH	8.1.6.191
	REG32	CONF_OSC1_OUT			; //	9F0H	8.1.6.192
	REG32	CONF_OSC1_VSS			; //	9F4H	8.1.6.193
	REG32	CONF_RTC_PORZ			; //	9F8H	8.1.6.194
	REG32	CONF_PMIC_POWER_EN		; //	9FCH	8.1.6.195
	REG32	CONF_EXT_WAKEUP			; //	A00H	8.1.6.197
	REG32	CONF_ENZ_KALDO_1P8V		; //	A04H	8.1.6.198
	REG32	CONF_USB0_DM			; //	A08H	8.1.6.199
	REG32	CONF_USB0_DP			; //	A0CH	8.1.6.200
	REG32	CONF_USB0_CE			; //	A10H	8.1.6.201
	REG32	CONF_USB0_ID			; //	A14H	8.1.6.202
	REG32	CONF_USB0_VBUS			; //	A18H	8.1.6.203
	REG32	CONF_USB0_DRVVBUS		; //	A1CH	8.1.6.204
	REG32	CONF_USB1_DM			; //	A20H	8.1.6.205
	REG32	CONF_USB1_DP			; //	A24H	8.1.6.206
	REG32	CONF_USB1_CE			; //	A28H	8.1.6.208
	REG32	CONF_USB1_ID			; //	A2CH	8.1.6.209
	REG32	CONF_USB1_VBUS			; //	A30H	8.1.6.210
	REG32	CONF_USB1_DRVVBUS		; //	A34H	8.1.6.211
	REG32	CONF_DDR_RESETN			; //	A38H	8.1.6.212
	REG32	CONF_DDR_CSN0			; //	A3CH	8.1.6.213
	REG32	CONF_DDR_CKE			; //	A40H	8.1.6.214
	REG32	CONF_DDR_NCK			; //	A48H	8.1.6.215
	REG32	CONF_DDR_CASN			; //	A4CH	8.1.6.216
	REG32	CONF_DDR_RASN			; //	A50H	8.1.6.218
	REG32	CONF_DDR_WEN			; //	A54H	8.1.6.219
	REG32	CONF_DDR_BA0			; //	A58H	8.1.6.220
	REG32	CONF_DDR_BA1			; //	A5CH	8.1.6.221
	REG32	CONF_DDR_BA2			; //	A60H	8.1.6.222
	REG32	CONF_DDR_A0				; //	A64H	8.1.6.223
	REG32	CONF_DDR_A1				; //	A68H	8.1.6.224
	REG32	CONF_DDR_A2				; //	A6CH	8.1.6.225
	REG32	CONF_DDR_A3				; //	A70H	8.1.6.226
	REG32	CONF_DDR_A4				; //	A74H	8.1.6.227
	REG32	CONF_DDR_A5				; //	A78H	8.1.6.228
	REG32	CONF_DDR_A6				; //	A7CH	8.1.6.229
	REG32	CONF_DDR_A7				; //	A80H	8.1.6.230
	REG32	CONF_DDR_A8				; //	A84H	8.1.6.231
	REG32	CONF_DDR_A9				; //	A88H	8.1.6.232
	REG32	CONF_DDR_A10			; //	A8CH	8.1.6.233
	REG32	CONF_DDR_A11			; //	A90H	8.1.6.234
	REG32	CONF_DDR_A12			; //	A94H	8.1.6.235
	REG32	CONF_DDR_A13			; //	A98H	8.1.6.236
	REG32	CONF_DDR_A14			; //	A9CH	8.1.6.237
	REG32	CONF_DDR_A15			; //	AA0H	8.1.6.239
	REG32	CONF_DDR_ODT			; //	AA4H	8.1.6.240
	REG32	CONF_DDR_D0				; //	AA8H	8.1.6.241
	REG32	CONF_DDR_D1				; //	AACH	8.1.6.242
	REG32	CONF_DDR_D2				; //	AB0H	8.1.6.243
	REG32	CONF_DDR_D3				; //	AB4H	8.1.6.244
	REG32	CONF_DDR_D4				; //	AB8H	8.1.6.245
	REG32	CONF_DDR_D5				; //	ABCH	8.1.6.246
	REG32	CONF_DDR_D6				; //	AC0H	8.1.6.247
	REG32	CONF_DDR_D7				; //	AC4H	8.1.6.248
	REG32	CONF_DDR_D8				; //	AC8H	8.1.6.250
	REG32	CONF_DDR_D9				; //	ACCH	8.1.6.251
	REG32	CONF_DDR_D10			; //	AD0H	8.1.6.252
	REG32	CONF_DDR_D11			; //	AD4H	8.1.6.253
	REG32	CONF_DDR_D12			; //	AD8H	8.1.6.254
	REG32	CONF_DDR_D13			; //	ADCH	8.1.6.255
	REG32	CONF_DDR_D14			; //	AE0H	8.1.6.256
	REG32	CONF_DDR_D15			; //	AE4H	8.1.6.257
	REG32	CONF_DDR_DQM0			; //	AE8H	8.1.6.258
	REG32	CONF_DDR_DQM1			; //	AECH	8.1.6.259
	REG32	CONF_DDR_DQS0			; //	AF0H	8.1.6.261
	REG32	CONF_DDR_DQSN0			; //	AF4H	8.1.6.262
	REG32	CONF_DDR_DQS1			; //	AF8H	8.1.6.263
	REG32	CONF_DDR_DQSN1			; //	AFCH	8.1.6.264
	REG32	CONF_DDR_VREF			; //	B00H	8.1.6.265
	REG32	CONF_DDR_VTP			; //	B04H	8.1.6.266
	REG32	CONF_DDR_STRBEN0		; //	B08H	8.1.6.267
	REG32	CONF_DDR_STRBEN1		; //	B0CH	8.1.6.268
	REG32	CONF_AIN7				; //	B10H	8.1.6.269
	REG32	CONF_AIN6				; //	B14H	8.1.6.270
	REG32	CONF_AIN5				; //	B18H	8.1.6.272
	REG32	CONF_AIN4				; //	B1CH	8.1.6.273
	REG32	CONF_AIN3				; //	B20H	8.1.6.274
	REG32	CONF_AIN2				; //	B24H	8.1.6.275
	REG32	CONF_AIN1				; //	B28H	8.1.6.276
	REG32	CONF_AIN0				; //	B2CH	8.1.6.277
	REG32	CONF_VREFP				; //	B30H	8.1.6.278
	REG32	CONF_VREFN				; //	B34H	8.1.6.279
	REG32	CONF_AVDD				; //	B38H	8.1.6.280
	REG32	CONF_AVSS				; //	B3CH	8.1.6.281
	REG32	CONF_IFORCE				; //	B40H	8.1.6.283
	REG32	CONF_VSENSE				; //	B44H	8.1.6.284
	REG32	CONF_TESTOUT			; //	B48H	8.1.6.285
	UINT32	res_0B4C_0BFC[45];
} AM33X_SYSC_PADCONFS_REGS;

//------------------------------------------------------------------------------

#define MUX_MODE_0                      (0)
#define MUX_MODE_1                      (1)
#define MUX_MODE_2                      (2)
#define MUX_MODE_3                      (3)
#define MUX_MODE_4                      (4)
#define MUX_MODE_5                      (5)
#define MUX_MODE_6                      (6)
#define MUX_MODE_7                      (7)

#define MUX_SLEWCTRL_SLOW				(1 << 6)
#define MUX_SLEWCTRL_FAST				(0 << 6)
#define INPUT_ENABLE                    (1 << 5)
#define INPUT_DISABLE                   (0 << 5)
#define PULL_DOWN						(0 << 4)
#define PULL_UP							(1 << 4)
#define PULL_DISABLE                    (1 << 3)
#define PULL_ENABLE                     (0 << 3)

typedef volatile struct {
	REG32	CQDETECT_STATUS			; //	E00H	8.1.6.300
	REG32	DDR_IO_CTRL				; //	E04H	8.1.6.301
	UINT32	res_0E08;
	REG32	VTP_CTRL				; //	E0CH	8.1.6.302
	UINT32	res_0E10;
	REG32	VREF_CTRL				; //	E14H	8.1.6.303
	UINT32	res_0E18_0E20[3];
	REG32	SERDES_REFCLK_CTL		; //	E24H	8.1.6.304
	UINT32	res_0E28_0EFC[54];
} AM33X_SYSC_MISC_REGS;

typedef volatile struct {
	UINT32	res_0F00_0F8C[36];
	REG32	TPCC_EVTMUX_0_3;	// 0xF90  TPCC Event mux for event no 0 to 3
	REG32	TPCC_EVTMUX_4_7;	// 0xF94  TPCC Event mux for event no 4 to 7
	REG32	TPCC_EVTMUX_8_11;	// 0xF98  TPCC Event mux for event no 8 to 11
	REG32	TPCC_EVTMUX_12_15;	// 0xF9C  TPCC Event mux for event no 12 to 15
	REG32	TPCC_EVTMUX_16_19;	// 0xFA0  TPCC Event mux for event no 16 to 19
	REG32	TPCC_EVTMUX_20_23;	// 0xFA4  TPCC Event mux for event no 20 to 23
	REG32	TPCC_EVTMUX_24_27;	// 0xFA8  TPCC Event mux for event no 24 to 27
	REG32	TPCC_EVTMUX_28_31;	// 0xFAC  
	REG32	TPCC_EVTMUX_32_35;	// 0xFB0  
	REG32	TPCC_EVTMUX_36_39;	// 0xFB4  
	REG32	TPCC_EVTMUX_40_43;	// 0xFB8  
	REG32	TPCC_EVTMUX_44_47;	// 0xFBC  
	REG32	TPCC_EVTMUX_48_51;	// 0xFC0  
	REG32	TPCC_EVTMUX_52_55;	// 0xFC4  
	REG32	TPCC_EVTMUX_56_59;	// 0xFC8  
	REG32	TPCC_EVTMUX_60_63;	// 0xFCC  
	REG32	TIMER_EVT_CAPT;		// 0xFD0  
	REG32	ECAP_EVT_CAPT;		// 0xFD4  
	REG32	ADC_EVT_CAPT;		// 0xFD8  
	UINT32	res_0FDC_0FFC[9];
} AM33X_SYSC_INTR_DMA_MUX_REGS;

typedef volatile struct {
	REG32	RESET_ISO				; //	1000H	8.1.6.331
	UINT32	res_1004_1314[197];
	REG32	SMA0					; //	1318H	8.1.6.341
	REG32	DDR_CKE_CTRL			; //	131CH	8.1.6.342
	REG32	SMA2					; //	1320H	8.1.6.343
	REG32	M3_TXEV_EOI				; //	1324H	8.1.6.344
	REG32	IPC_MSG_REG0			; //	1328H	8.1.6.345
	REG32	IPC_MSG_REG1			; //	132CH	8.1.6.346
	REG32	IPC_MSG_REG2			; //	1330H	8.1.6.347
	REG32	IPC_MSG_REG3			; //	1334H	8.1.6.348
	REG32	IPC_MSG_REG4			; //	1338H	8.1.6.349
	REG32	IPC_MSG_REG5			; //	133CH	8.1.6.350
	REG32	IPC_MSG_REG6			; //	1340H	8.1.6.351
	REG32	IPC_MSG_REG7			; //	1344H	8.1.6.352
	UINT32	res_1348_1400[47];
	REG32	DDR_CMD0_IOCTRL			; //	1404H	8.1.6.354
	REG32	DDR_CMD1_IOCTRL			; //	1408H	8.1.6.355
	REG32	DDR_CMD2_IOCTRL			; //	140CH	8.1.6.356
	UINT32	res_1410_143C[12];
	REG32	DDR_DATA0_IOCTRL		; //	1440H	8.1.6.358
	REG32	DDR_DATA1_IOCTRL		; //	1444H	8.1.6.359
	REG32	DDR_DATA2_IOCTRL		; //	1448H	8.1.6.360
	REG32	DDR_DATA3_IOCTRL		; //	144CH	8.1.6.361
	REG32	DDR_DATA4_IOCTRL		; //	1450H	8.1.6.363
	UINT32	res_1454_1820[244];
	REG32	DIE_ID2					; //	1824H	8.1.6.382
	UINT32	res_1828_1844[8];
	REG32	DIE_ID1					; //	1848H	8.1.6.388
	REG32	res_184C;				 
	REG32	DIE_ID3					; //	1850H	8.1.6.390
} AM33X_SYSC_MISC2_REGS;

#endif // __AM33X_CONFIG_H

